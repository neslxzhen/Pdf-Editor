{"version":3,"sources":["utils/prepareAssets.ts","utils/asyncReader.ts","utils/pdf.ts","hooks/usePdf.ts","hooks/useAttachments.ts","entities/index.ts","components/Text.tsx","components/Stone.tsx","containers/DraggableText.tsx","components/Image.tsx","containers/DraggableImage.tsx","containers/Droppable.tsx","components/Placements.tsx","hooks/useUploader.ts","components/Attachments.tsx","utils/helpers.ts","containers/Candidate.tsx","containers/CandidateImage.tsx","utils/StorageService.ts","hooks/useDrawer.ts","models/MockPlacements.ts","components/Page.tsx","containers/Scene.tsx","containers/CandidateText.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["scripts","name","src","assets","getAsset","scriptName","fonts","Courier","correction","size","lineHeight","Helvetica","readAsArrayBuffer","標楷體","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsImage","img","Image","Blob","url","window","URL","createObjectURL","readAsDataURL","readAsPDF","a","pdfjsLib","blob","getDocument","promise","save","pdfFile","objects","PDFLib","download","PDFDocument","load","pdfDoc","console","log","pagesProcesses","getPages","map","page","pageIndex","pageObjects","pageHeight","getHeight","embedProcesses","object","type","x","y","width","height","embedJpg","embedPng","drawImage","text","fontFamily","embedFont","pdfFont","drawText","maxWidth","font","all","forEach","p","pdfBytes","ActionType","DragActions","Color","AttachmentTypes","TextMode","initialState","allPageAttachments","pageAttachments","reducer","state","action","ADD_ATTACHMENT","newAllPageAttachmentsAdd","attachments","index","attachment","REMOVE_ATTACHMENT","newAllPageAttachmentsRemove","otherPageAttachments","filter","id","UPDATE_ATTACHMENT","newAllPageAttachmentsUpdate","old","UPDATE_PAGE_INDEX","RESET","Array","numberOfPages","fill","Text","forwardRef","ref","listeners","draggableAttrs","onBlur","onChangeText","editing","style","dragAttrs","onChange","readOnly","fontSize","outline","padding","margin","cursor","border","backgroundColor","value","length","Stone","translateX","translateY","position","children","borderRadius","transform","DraggableText","removeText","pageWidth","updateTextAttachment","hidden","useState","content","setContent","setEditing","useDraggable","attributes","inputRef","node","isDragging","setNodeRef","useEffect","input","current","focus","select","document","getSelection","removeAllRanges","lines","editButton","top","right","onClick","color","textStyle","borderWidth","borderColor","borderStyle","hiddenStyle","visibility","e","event","currentTarget","desc","alt","DraggableImage","removeImage","deleteButton","left","stone","leftTop","rightTop","leftBottom","bottom","rightBottom","Droppable","useDroppable","isOver","boxShadow","UploadTypes","Placements","placements","scale","placement","key","getHiddenPlaceholder","column_id","Attachments","pageDimensions","removeAttachment","updateAttachment","defaultCoordinates","initialWindowScroll","setInitialWindowScroll","draggingAttach","setDraggingAttach","draggingId","setDraggingId","snapshot","setSnapshot","find","TEXT","IMAGE","handleAttachmentUpdate","onDragStart","active","scrollX","scrollY","onDragEnd","updated","over","coverId","delta","onDragCancel","updateImageAttachment","getAttachmentJsx","createPortal","body","useUploader","afterUploadPdf","afterUploadImage","use","uploading","setUploading","createRef","handleUpload","click","fileOnChange","files","dataTransfer","fileToImage","PDF","fileToPdf","uuid","v4","Error","pdf","pages","numPages","_","getPage","scaleTo","w","h","max","Math","min","Candidate","float","CandidateImage","addAttachment","getScaledImage","dbPromise","openDB","upgrade","db","oldVersion","newVersion","transaction","createObjectStore","blocked","blocking","terminated","saveImageFile","put","getAllImageFiles","getAll","removeAllImageFiles","objectStore","clear","mockPlacements","arr","push","Page","dimensions","setDimensions","canvasRef","useRef","setWidth","setHeight","_page","canvas","context","getContext","viewport","getViewport","render","canvasContext","newDimensions","renderPage","Scene","currentPage","Card","display","CandidateText","Button","App","setName","setPageIndex","setFile","setPages","isMultiPage","setIsMultiPage","isFirstPage","setIsFirstPage","isLastPage","setIsLastPage","isSaving","setIsSaving","setDimensionsHandler","useCallback","nextPage","newPageIndex","savePdf","setPdf","_pages","multi","previousPage","usePdf","allCandidates","setAllCandidates","flag","setFlag","images","func","then","refresh","saveImage","newAttachment","removeAllImages","useDrawer","useReducer","dispatch","resetAttachments","removeAttachments","updateAttachments","useAttachments","isPdfLoaded","uploaded","pdfRef","handlePdfUpload","pdfOnChange","addScaledAttachment","imgRef","handleImageUpload","imgOnChange","undefined","getScaledText","getScaledAttachment","hiddenInputs","accept","previousButtonStyle","nextPageStyle","className","Container","fluid","marginTop","Row","Col","sm","variant","newTextAttachment","Nav","Link","_pageAttachments","_allAttachment","getUnscaledText","getUnscaledImage","Boolean","location","hostname","match","script","createElement","appendChild","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ab59dd8e.chunk.js","sourcesContent":["type ScriptName = 'pdfjsLib' | 'PDFLib' | 'download' | 'w3Color';\n\ninterface Script {\n  name: ScriptName;\n  src: string;\n}\n\nconst scripts: Script[] = [\n  {\n    name: 'pdfjsLib',\n    src: 'https://unpkg.com/pdfjs-dist@2.3.200/build/pdf.min.js',\n  },\n  {\n    name: 'PDFLib',\n    src: 'https://unpkg.com/pdf-lib@1.4.0/dist/pdf-lib.min.js',\n  },\n  {\n    name: 'download',\n    src: 'https://unpkg.com/downloadjs@1.4.7',\n  },\n  { name: 'w3Color', src: 'https://www.w3schools.com/lib/w3color.js' },\n];\n\nconst assets: Record<string, any> = {};\nexport const getAsset = (scriptName: string) => assets[scriptName];\n\nexport const prepareAssets = (): void => {\n  // prepare scripts\n  scripts.forEach(({ name, src }) => {\n    assets[name] = new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      script.src = src;\n      script.onload = () => {\n        resolve(window[name as any]);\n        console.log(`${name} is loaded.`);\n      };\n      script.onerror = () =>\n        reject(`The script ${name} didn't load correctly.`);\n      document.body.appendChild(script);\n    });\n  });\n};\n\ninterface Font {\n  src?: string;\n  correction?: (size: number, lineHeight: number) => number;\n  [key: string]: any;\n}\n\ninterface FontsType {\n  [key: string]: Font;\n}\n\nconst fonts: FontsType = {\n  Courier: {\n    correction(size: number, lineHeight: number) {\n      return (size * lineHeight - size) / 2 + size / 6;\n    },\n  },\n  Helvetica: {\n    correction(size: number, lineHeight: number) {\n      return (size * lineHeight - size) / 2 + size / 10;\n    },\n  },\n  'Times-Roman': {\n    correction(size: number, lineHeight: number) {\n      return (size * lineHeight - size) / 2 + size / 7;\n    },\n  },\n};\n\n// Available fonts\nexport const Fonts = {\n  ...fonts,\n  標楷體: {\n    src: '/CK.ttf', // 9.9 MB\n    correction(size: number, lineHeight: number) {\n      return (size * lineHeight - size) / 2;\n    },\n  },\n};\n\nexport const fetchFont = (name: string) => {\n  if (fonts[name as any]) return fonts[name as any];\n\n  const font = Fonts[name as keyof typeof Fonts];\n  if (!font) throw new Error(`Font '${name}' not exists.`);\n\n  fonts[name] = fetch(font.src)\n    .then((r) => r.arrayBuffer())\n    .then((fontBuffer) => {\n      const fontFace = new (window as any).FontFace(name, fontBuffer);\n      fontFace.display = 'swap';\n      fontFace.load().then(() => (document as any).fonts.add(fontFace));\n      return {\n        ...font,\n        buffer: fontBuffer,\n      };\n    });\n};\n","import { getAsset } from './prepareAssets';\n\nexport const readAsArrayBuffer = (\n  file: File\n): Promise<string | ArrayBuffer | null> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = reject;\n    reader.readAsArrayBuffer(file);\n  });\n};\n\nexport const readAsImage = (src: Blob | string): Promise<HTMLImageElement> => {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => resolve(img);\n    img.onerror = reject;\n    if (src instanceof Blob) {\n      const url = window.URL.createObjectURL(src);\n      img.src = url;\n    } else {\n      img.src = src;\n    }\n  });\n};\n\nexport const readAsDataURL = (\n  file: File\n): Promise<string | ArrayBuffer | null> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = reject;\n    reader.readAsDataURL(file);\n  });\n};\n\ninterface PDF {\n  numPages: number;\n  getPage: (index: number) => Promise<any>;\n}\nexport const readAsPDF = async (file: File): Promise<PDF> => {\n  const pdfjsLib = await getAsset('pdfjsLib');\n  // Safari possibly get webkitblobresource error 1 when using origin file blob\n  const blob = new Blob([file]);\n  const url = window.URL.createObjectURL(blob);\n  return pdfjsLib.getDocument(url).promise;\n};\n","import { readAsArrayBuffer } from './asyncReader';\nimport { getAsset } from './prepareAssets';\n\nexport async function save(\n  pdfFile: File,\n  objects: Attachments[],\n  name: string\n) {\n  const PDFLib = await getAsset('PDFLib');\n  const download = await getAsset('download');\n  let pdfDoc: {\n    getPages: () => any[];\n    embedFont: (arg0: unknown) => any;\n    embedJpg: (arg0: unknown) => any;\n    embedPng: (arg0: unknown) => any;\n    embedPdf: (arg0: any) => [any] | PromiseLike<[any]>;\n    save: () => any;\n  };\n\n  try {\n    pdfDoc = await PDFLib.PDFDocument.load(await readAsArrayBuffer(pdfFile));\n  } catch (e) {\n    console.log('Failed to load PDF.');\n    throw e;\n  }\n\n  const pagesProcesses = pdfDoc.getPages().map(async (page, pageIndex) => {\n    const pageObjects = objects[pageIndex];\n    // 'y' starts from bottom in PDFLib, use this to calculate y\n    const pageHeight = page.getHeight();\n    const embedProcesses = pageObjects.map(async (object: Attachment) => {\n      if (object.type === 'image') {\n        const { file, x, y, width, height } = object as ImageAttachment;\n        let img: any;\n        try {\n          if (file.type === 'image/jpeg') {\n            img = await pdfDoc.embedJpg(await readAsArrayBuffer(file));\n          } else {\n            img = await pdfDoc.embedPng(await readAsArrayBuffer(file));\n          }\n          return () =>\n            page.drawImage(img, {\n              x,\n              y: pageHeight - y - height,\n              width,\n              height,\n            });\n        } catch (e) {\n          console.log('Failed to embed image.', e);\n          throw e;\n        }\n      } else if (object.type === 'text') {\n        const { x, y, text, lineHeight, size, fontFamily, width } =\n          object as TextAttachment;\n        const pdfFont = await pdfDoc.embedFont(fontFamily);\n        return () =>\n          page.drawText(text, {\n            maxWidth: width,\n            font: pdfFont,\n            size,\n            lineHeight,\n            x,\n            y: pageHeight - size! - y,\n          });\n      }\n    });\n    // embed objects in order\n    const drawProcesses: any[] = await Promise.all(embedProcesses);\n    drawProcesses.forEach((p) => p());\n  });\n  await Promise.all(pagesProcesses);\n  try {\n    const pdfBytes = await pdfDoc.save();\n    download(pdfBytes, name, 'application/pdf');\n  } catch (e) {\n    console.log('Failed to save PDF.');\n    throw e;\n  }\n}\n","import { useState, useCallback } from 'react';\nimport { save } from '../utils/pdf';\n\nexport interface Pdf {\n  name: string;\n  file: File;\n  pages: Promise<any>[];\n}\n\nexport const usePdf = () => {\n  const [name, setName] = useState('');\n  const [pageIndex, setPageIndex] = useState(-1);\n  const [dimensions, setDimensions] = useState<Dimensions>();\n  const [file, setFile] = useState<File>();\n  const [pages, setPages] = useState<any>([]);\n  const [isMultiPage, setIsMultiPage] = useState(false);\n  const [isFirstPage, setIsFirstPage] = useState(false);\n  const [isLastPage, setIsLastPage] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const setDimensionsHandler = useCallback(setDimensions, [setDimensions]);\n\n  return {\n    isMultiPage,\n    isFirstPage,\n    isLastPage,\n    isSaving,\n    currentPage: pages[pageIndex],\n    dimensions,\n    setDimensions: setDimensionsHandler,\n    name,\n    setName,\n    pageIndex,\n    setPageIndex,\n    file,\n    setFile,\n    pages,\n    nextPage: () => {\n      const newPageIndex = pageIndex + 1;\n      setPageIndex(pageIndex + 1);\n      setIsFirstPage(newPageIndex === 0);\n      setIsLastPage(newPageIndex === pages.length - 1);\n    },\n    savePdf: async (attachments: Attachments[]) => {\n      if (isSaving || !file) return;\n\n      setIsSaving(true);\n\n      try {\n        await save(file, attachments, name);\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setIsSaving(false);\n      }\n    },\n    setPdf: ({ name, file, pages: _pages }: Pdf) => {\n      const multi = _pages.length > 1;\n      setName(name);\n      setFile(file);\n      setPages(_pages);\n      setPageIndex(0);\n      setIsMultiPage(multi);\n      setIsFirstPage(true);\n      setIsLastPage(_pages.length === 1);\n    },\n    previousPage: () => {\n      const newPageIndex = pageIndex - 1;\n      setPageIndex(newPageIndex);\n      setIsFirstPage(newPageIndex === 0);\n      setIsLastPage(newPageIndex === pages.length - 1);\n    },\n  };\n};\n","import { useReducer, useCallback } from 'react';\n\nenum ActionType {\n  RESET = 'RESET',\n  ADD_ATTACHMENT = 'ADD_ATTACHMENT',\n  REMOVE_ATTACHMENT = 'REMOVE_ATTACHMENT',\n  UPDATE_ATTACHMENT = 'UPDATE_ATTACHMENT',\n  UPDATE_PAGE_INDEX = 'UPDATE_PAGE_INDEX',\n}\n\ninterface State {\n  pageIndex: number;\n  allPageAttachments: Attachments[];\n  pageAttachments: Attachments;\n}\n\ntype Action =\n  | { type: ActionType.UPDATE_PAGE_INDEX; pageIndex: number }\n  | { type: ActionType.ADD_ATTACHMENT; attachment: Attachment }\n  | { type: ActionType.REMOVE_ATTACHMENT; id: string }\n  | {\n      type: ActionType.UPDATE_ATTACHMENT;\n      id: string;\n      attachment: Partial<Attachment>;\n    }\n  | { type: ActionType.RESET; numberOfPages: number };\n\nconst initialState: State = {\n  pageIndex: -1,\n  allPageAttachments: [],\n  pageAttachments: [],\n};\n\nconst reducer = (state: State, action: Action) => {\n  const { pageIndex, allPageAttachments, pageAttachments } = state;\n\n  switch (action.type) {\n    case ActionType.ADD_ATTACHMENT: {\n      const newAllPageAttachmentsAdd = allPageAttachments.map(\n        (attachments, index) =>\n          pageIndex === index\n            ? [...attachments, action.attachment]\n            : attachments\n      );\n\n      return {\n        ...state,\n        allPageAttachments: newAllPageAttachmentsAdd,\n        pageAttachments: newAllPageAttachmentsAdd[pageIndex],\n      };\n    }\n    case ActionType.REMOVE_ATTACHMENT: {\n      const newAllPageAttachmentsRemove = allPageAttachments.map(\n        (otherPageAttachments, index) =>\n          pageIndex === index\n            ? pageAttachments.filter((a) => a.id !== action.id)\n            : otherPageAttachments\n      );\n\n      return {\n        ...state,\n        allPageAttachments: newAllPageAttachmentsRemove,\n        pageAttachments: newAllPageAttachmentsRemove[pageIndex],\n      };\n    }\n    case ActionType.UPDATE_ATTACHMENT: {\n      if (pageIndex === -1) {\n        return state;\n      }\n\n      const newAllPageAttachmentsUpdate = allPageAttachments.map(\n        (otherPageAttachments, index) =>\n          pageIndex === index\n            ? pageAttachments.map((old) =>\n                old.id === action.id ? { ...old, ...action.attachment } : old\n              )\n            : otherPageAttachments\n      );\n\n      return {\n        ...state,\n        allPageAttachments: newAllPageAttachmentsUpdate,\n        pageAttachments: newAllPageAttachmentsUpdate[pageIndex],\n      };\n    }\n    case ActionType.UPDATE_PAGE_INDEX: {\n      return {\n        ...state,\n        pageIndex: action.pageIndex,\n        pageAttachments: allPageAttachments[action.pageIndex],\n      };\n    }\n    case ActionType.RESET: {\n      return {\n        pageIndex: 0,\n        pageAttachments: [],\n        allPageAttachments: Array(action.numberOfPages).fill([]),\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const useAttachments = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { allPageAttachments, pageAttachments } = state;\n\n  return {\n    pageAttachments,\n    allPageAttachments,\n    addAttachment: (newAttachment: Attachment) =>\n      dispatch({ type: ActionType.ADD_ATTACHMENT, attachment: newAttachment }),\n    resetAttachments: (numberOfPages: number) =>\n      dispatch({ type: ActionType.RESET, numberOfPages }),\n    removeAttachments: (id: string) =>\n      dispatch({ type: ActionType.REMOVE_ATTACHMENT, id }),\n    updateAttachments: (id: string, attachment: Partial<Attachment>) =>\n      dispatch({\n        type: ActionType.UPDATE_ATTACHMENT,\n        id,\n        attachment,\n      }),\n    setPageIndex: useCallback(\n      (index: number) =>\n        dispatch({ type: ActionType.UPDATE_PAGE_INDEX, pageIndex: index }),\n      [dispatch]\n    ),\n  };\n};\n","export enum DragActions {\n  MOVE = 'MOVE',\n  SCALE = 'SCALE',\n  NO_MOVEMENT = 'NO_MOVEMENT',\n}\n\nexport enum Color {\n  RED = 'red',\n  ORANGE = 'orange',\n  YELLOW = 'yellow',\n  OLIVE = 'olive',\n  GREEN = 'green',\n  TEAL = 'teal',\n  BLUE = 'blue',\n  VIOLOET = 'violet',\n  PURPLE = 'purple',\n  BROWN = 'brown',\n  GREY = 'grey',\n  BLACK = 'black',\n}\n\nexport enum AttachmentTypes {\n  IMAGE = 'image',\n  TEXT = 'text',\n}\n\nexport enum TextMode {\n  INSERT = 'insert',\n  COMMAND = 'command',\n}\n","import React, { CSSProperties, FocusEventHandler, forwardRef } from 'react';\nimport classNames from 'classnames';\nimport type {DraggableSyntheticListeners, Translate} from '@dnd-kit/core';\n\ninterface Props {\n  listeners?: DraggableSyntheticListeners;\n  draggableAttrs?: object;\n  text?: string;\n  editing?: boolean;\n  onBlur?: FocusEventHandler<HTMLInputElement>;\n  onChangeText?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  size?: number;\n  lineHeight?: number;\n  fontFamily?: string;\n  style?: CSSProperties;\n}\n\nexport const Text = forwardRef<HTMLInputElement, Props>((\n    {\n      listeners,\n      draggableAttrs,\n      onBlur,\n      onChangeText,\n      editing = false,\n      text,\n      size,\n      lineHeight,\n      fontFamily,\n      style,\n    },\n    ref\n  )=> {\n  const dragAttrs = {\n    ...listeners,\n    ...draggableAttrs,\n  }\n\n  return (\n        <input\n          type=\"text\"\n          onBlur={onBlur}\n          ref={ref}\n          onChange={onChangeText}\n          readOnly={!editing}\n          style={{\n            fontSize: size,\n            lineHeight,\n            fontFamily,\n            outline: 'none',\n            padding: 0,\n            margin: 0,\n            cursor: editing ? 'text': 'move' ,\n            border: 'unset',\n            backgroundColor: 'unset',\n            ...style,\n          }}\n          value={text}\n          size={text?.length || 5}\n          {...(editing? {} : dragAttrs)}\n        />\n    );\n  }\n);\n\n","import React, { useState, useEffect, useRef, CSSProperties, ReactNode } from 'react';\n\ninterface Position {\n  left?: number;\n  top?: number;\n  right?: number;\n  bottom?: number;\n}\n\ninterface Props {\n  position: Position\n  style?: CSSProperties\n  translateX: string;\n  translateY: string;\n  children?: ReactNode | null;\n}\n\nexport const Stone = (\n  {\n    style,\n    translateX,\n    translateY,\n    position,\n    children,\n} : Props) => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        ...position,\n        width: '3rem',\n        height: '3rem',\n        margin: 'auto',\n        borderRadius: '9999px',\n        transform: `translateX(${translateX}) translateY(${translateY}) rotate(0) skewX(0) skewY(0) scaleX(0.25) scaleY(0.25)`,\n        ...style,\n      }}>\n      {children}\n    </div>\n  );\n};\n","import React, { useState, useRef, useEffect, createRef, CSSProperties } from 'react';\nimport { DragActions, TextMode } from '../entities';\nimport { DraggableData, DraggableEvent, DraggableEventHandler } from 'react-draggable';\nimport { Rnd } from 'react-rnd';\nimport { Translate, useDraggable } from '@dnd-kit/core';\nimport { Text } from '../components/Text';\nimport { Stone } from '../components/Stone';\nimport { BsPencil, BsXCircleFill } from 'react-icons/all';\n\ninterface Props {\n  pageWidth: number;\n  pageHeight: number;\n  removeText?: () => void;\n  updateTextAttachment?: (textObject: Partial<TextAttachment>) => void;\n  size?: number,\n  lineHeight?: number,\n  fontFamily?: string,\n  hidden?: boolean,\n  x:number;\n  y:number;\n}\n\nexport const DraggableText = (\n  {\n    id,\n   text,\n   pageHeight,\n   pageWidth,\n   removeText,\n   updateTextAttachment,\n    size,\n    lineHeight,\n    fontFamily,\n    hidden = false,\n    x,\n    y,\n}: TextAttachment & Props) => {\n  const [content, setContent] = useState(text || '');\n  const [editing, setEditing] = useState(false);\n\n  const {attributes: draggableAttrs, node: inputRef, isDragging, listeners, setNodeRef} = useDraggable({\n    id,\n  });\n\n  useEffect(()=>{\n    if(editing){\n      const input = inputRef.current;\n      if (input) {\n        input.focus();\n        (input as HTMLInputElement).select();\n      }\n    }else{\n      document.getSelection()?.removeAllRanges();\n      if(content === '' && removeText){\n        removeText()\n      }else if(updateTextAttachment){\n        const lines = [content];\n        updateTextAttachment({\n          lines,\n          text: content,\n        });\n      }\n    }\n  },[editing])\n\n  const onChangeText = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value;\n    setContent(value);\n  };\n\n  function onEdit(){\n    setEditing(true)\n  }\n\n  const onBlur = (e: any) =>{\n    setEditing(false)\n  }\n\n  const editButton =\n    <Stone\n      position={{\n        top: 0,\n        right: 0,\n      }}\n      translateX={\"50%\"}\n      translateY={\"-50%\"}\n      style={{\n        cursor: 'pointer',\n        backgroundColor: '#1eb99d',\n      }}\n    >\n      <BsPencil\n        onClick={onEdit}\n        style={{\n          color:'white',\n          width: \"100%\",\n          height: \"100%\",\n        }}/>\n    </Stone>\n\n  let textStyle: CSSProperties = {\n    borderWidth: '0.3px',\n    borderColor: 'gray',\n    borderStyle: editing? 'solid': 'dashed',\n  }\n\n  const hiddenStyle: CSSProperties = hidden\n    ? {visibility: 'hidden',}\n    : {}\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        'left': `${x ?? 0}px`,\n        'top': `${y ?? 0}px`,\n        ...hiddenStyle\n      }}\n    >\n      {editing && removeText && updateTextAttachment ? null : editButton}\n      <Text\n        ref={setNodeRef}\n        listeners={listeners}\n        draggableAttrs={draggableAttrs}\n        onBlur={onBlur}\n        text={content}\n        size={size}\n        lineHeight= { lineHeight }\n        fontFamily={fontFamily}\n        editing={editing}\n        onChangeText={onChangeText}\n        style={textStyle}\n      />\n    </div>\n  )\n};\n","import React, { createRef, CSSProperties, forwardRef, MutableRefObject, RefObject, useEffect, useState } from 'react';\nimport { Rnd, RndDragCallback, RndResizeCallback } from 'react-rnd';\nimport { scaleTo } from '../utils/helpers';\nimport { DraggableSyntheticListeners, Translate } from '@dnd-kit/core';\n\ninterface Props {\n  img: HTMLImageElement;\n  width: number;\n  height: number;\n  style?: CSSProperties,\n  listeners?: DraggableSyntheticListeners;\n  draggableAttrs?: object;\n  desc?: string;\n}\n\nexport const Image = forwardRef<HTMLImageElement, Props>((\n  {\n    width,\n    height,\n    img,\n    style,\n    listeners,\n    draggableAttrs,\n    desc,\n  },\n  ref\n)=> {\n\n  return (\n    <img\n      style={{\n        width: width+\"px\" ,\n        height: height+\"px\",\n        cursor: 'move',\n        ...style,\n      }}\n      src={img.src}\n      ref={ref}\n      {...listeners}\n      {...draggableAttrs}\n      alt={desc}\n    />\n  );\n  }\n);\n\n","import React, { useState, useEffect, useRef, CSSProperties } from 'react';\nimport { Image as Component } from '../components/Image';\nimport { Position, ResizableDelta, Rnd } from 'react-rnd';\nimport { DraggableData, DraggableEvent } from 'react-draggable';\nimport { Direction } from 're-resizable/lib/resizer';\nimport { BsFillCircleFill, BsXCircleFill } from 'react-icons/all';\nimport { Stone } from '../components/Stone';\nimport { Translate, useDraggable } from '@dnd-kit/core';\n\ninterface Props {\n  pageWidth: number;\n  pageHeight: number;\n  removeImage?: () => void;\n  updateImageAttachment?: (imageObject: Partial<ImageAttachment>) => void;\n  hidden?: boolean;\n  x:number;\n  y:number;\n}\n\nexport const DraggableImage = (\n  {\n  id,\n  img,\n  width,\n  height,\n  pageWidth,\n  removeImage,\n  pageHeight,\n    hidden=false,\n    x,\n    y,\n}: ImageAttachment & Props) => {\n  const {attributes: draggableAttrs, isDragging, listeners, setNodeRef} = useDraggable({\n    id,\n  });\n\n  const deleteButton =\n    <Stone\n      position={{\n        left: 0,\n        top: 0,\n        right: 0,\n      }}\n      translateX={\"0\"}\n      translateY={\"-50%\"}\n      style={{\n        backgroundColor: 'white',\n      }}\n    >\n      <BsXCircleFill\n        onClick={removeImage}\n        style={{\n          cursor: 'pointer',\n          color:'rgb(245, 101, 101)',\n          width: \"100%\",\n          height: \"100%\",\n        }}/>\n    </Stone>\n\n  const stone =\n    <BsFillCircleFill\n      style={{\n        color:'#90cdf4',\n        width: \"100%\",\n        height: \"100%\",\n      }}\n    />\n\n  const leftTop =\n    <Stone\n      position={{\n        left: 0,\n        top: 0,\n      }}\n      translateX={\"-50%\"}\n      translateY={\"-50%\"}\n    >\n      {stone}\n    </Stone>\n\n  const rightTop =\n    <Stone\n      position={{\n        right: 0,\n        top: 0,\n      }}\n      translateX={\"50%\"}\n      translateY={\"-50%\"}\n    >\n      {stone}\n    </Stone>\n\n  const leftBottom =\n    <Stone\n      position={{\n        left: 0,\n        bottom: 0,\n      }}\n      translateX={\"-50%\"}\n      translateY={\"50%\"}\n    >\n      {stone}\n    </Stone>\n\n  const rightBottom =\n    <Stone\n      position={{\n        right: 0,\n        bottom: 0,\n      }}\n      translateX={\"50%\"}\n      translateY={\"50%\"}\n    >\n      {stone}\n    </Stone>\n\n  let imageStyle: CSSProperties = {\n    border:'0.3px dashed gray',\n    cursor: 'move',\n  }\n\n  const hiddenStyle: CSSProperties = hidden\n    ? {visibility: 'hidden',}\n    : {}\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        'left': `${x ?? 0}px`,\n        'top': `${y ?? 0}px`,\n        ...hiddenStyle,\n      }}\n    >\n      {removeImage && deleteButton}\n      {leftTop}\n      {rightTop}\n      {leftBottom}\n      {rightBottom}\n      <Component\n        ref={setNodeRef}\n        listeners={listeners}\n        draggableAttrs={draggableAttrs}\n        style={imageStyle}\n        img={img}\n        width={width}\n        height={height}/>\n    </div>\n  );\n};\n","import React, { CSSProperties } from 'react';\nimport {useDroppable, UniqueIdentifier} from '@dnd-kit/core';\n\nimport styles from './Droppable.module.css';\nimport classNames from 'classnames';\n\ninterface Props {\n  children: React.ReactNode | null;\n  id: UniqueIdentifier;\n  x: number;\n  y: number;\n  width: number,\n  height: number,\n}\n\nexport function Droppable(\n  {\n    children,\n    id,\n    x,\n    y,\n    width,\n    height,\n  }: Props) {\n  const {isOver, setNodeRef} = useDroppable({\n    id,\n  });\n\n  let border: CSSProperties ={\n    color: 'gray',\n    borderStyle: 'dashed',\n    borderWidth: '1px',\n  }\n  if(isOver){\n    border = {\n      boxShadow: \"inset #1eb99d 0 0 0 3px, rgba(201, 211, 219, 0.5) 20px 14px 24px\"\n    }\n  }\n\n  if(children){\n    border={\n      color:'rgb(245, 101, 101)',\n      borderStyle: 'solid',\n    }\n  }\n\n  return (\n    <div\n      ref={setNodeRef}\n      style={{\n        width,\n        height,\n        position: 'absolute',\n        left: `${x ?? 0}px`,\n        top: `${y ?? 0}px`,\n        // backgroundColor: \"#fff\",\n        ...border,\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\n","import React, { ReactNode, useEffect, useState } from 'react';\nimport { AttachmentTypes } from '../entities';\nimport { DraggableText } from '../containers/DraggableText';\nimport { DraggableImage } from '../containers/DraggableImage';\nimport {\n  defaultCoordinates,\n  DndContext, DragOverlay,\n  KeyboardSensor, Modifiers,\n  MouseSensor, PointerActivationConstraint,\n  TouchSensor,\n  Translate,\n  useSensor, useSensors,\n} from '@dnd-kit/core';\nimport { DragEndEvent } from '@dnd-kit/core/dist/types';\nimport { Droppable } from '../containers/Droppable';\nimport { Text } from './Text';\n\ninterface Props {\n  placements: Placement[];\n  attachments: Attachment[];\n  scale?:number;\n}\n\nexport const Placements: React.FC<Props> = (\n  {\n    placements,\n    attachments,\n    scale=1,\n}) => {\n\n  function getHiddenPlaceholder(attachments: Attachment[]) {\n    const result = attachments.map(a => {\n      const key = a.id;\n      return (<div hidden key={key} />)\n    })\n\n    if(!result.length){\n      return null\n    }else{\n      return result\n    }\n  }\n\n  return (\n    <>\n      {placements.map(placement => {\n        const id = placement.id\n        return <Droppable\n          key={id}\n          {...placement}\n          width={placement.width * scale}\n          height={placement.height * scale}\n          x={placement.x * scale}\n          y={placement.y * scale}\n        >\n          {getHiddenPlaceholder(attachments?.filter(a => a.column_id === id))}\n        </Droppable>\n      })}\n    </>\n  )\n};\n","import React, { createRef, useState } from 'react';\nimport { readAsDataURL, readAsImage, readAsPDF } from '../utils/asyncReader';\nimport { Pdf } from './usePdf';\nimport { AttachmentTypes } from '../entities';\nimport uuid from 'uuid';\n\nexport enum UploadTypes {\n  PDF = 'pdf',\n  IMAGE = 'image',\n}\n\nexport const useUploader = ({\n  afterUploadPdf,\n  afterUploadImage,\n  use,\n}: {\n  afterUploadPdf?: (upload: Pdf) => void;\n  afterUploadImage?: (upload: ImageAttachment) => void;\n  use: UploadTypes;\n}) => {\n  const [uploading, setUploading] = useState(false);\n  const inputRef = createRef<HTMLInputElement>();\n\n  return {\n    inputRef,\n    uploading,\n    handleUpload: () => {\n      const input = inputRef.current;\n      if (input) {\n        input.value = '';\n        setUploading(true);\n        input.click();\n      }\n    },\n    fileOnChange: async (\n      event: React.ChangeEvent<HTMLInputElement> & {\n        dataTransfer?: DataTransfer;\n      }\n    ) => {\n      if (!uploading) return;\n\n      const files: FileList | undefined =\n        event.currentTarget.files ||\n        (event.dataTransfer && event.dataTransfer.files);\n      if (!files) {\n        setUploading(false);\n        return;\n      }\n\n      const file = files[0];\n      if (use === UploadTypes.IMAGE) {\n        const result = await fileToImage(file);\n        if (afterUploadImage) afterUploadImage(result);\n      } else if (use === UploadTypes.PDF) {\n        const result = await fileToPdf(file);\n        if (afterUploadPdf) afterUploadPdf(result);\n      }\n\n      setUploading(false);\n    },\n  };\n};\n\nexport async function fileToImage(file: File): Promise<ImageAttachment> {\n  try {\n    const url = await readAsDataURL(file);\n    const img = await readAsImage(url as string);\n    const id = uuid.v4();\n    const { width, height } = img;\n\n    return {\n      id,\n      type: AttachmentTypes.IMAGE,\n      width,\n      height,\n      x: 0,\n      y: 0,\n      img,\n      file,\n    } as ImageAttachment;\n  } catch (error) {\n    console.log('Failed to load image', error);\n    throw new Error('Failed to load image');\n  }\n}\n\nexport async function fileToPdf(file: File): Promise<Pdf> {\n  try {\n    const pdf = await readAsPDF(file);\n    return {\n      file,\n      name: file.name,\n      pages: Array(pdf.numPages)\n        .fill(0)\n        .map((_, index) => pdf.getPage(index + 1)),\n    } as Pdf;\n  } catch (error) {\n    console.log('Failed to load pdf', error);\n    throw new Error('Failed to load PDF');\n  }\n}\n","import React, { CSSProperties, ReactNode, useEffect, useState } from 'react';\nimport { AttachmentTypes } from '../entities';\nimport { DraggableText } from '../containers/DraggableText';\nimport { DraggableImage } from '../containers/DraggableImage';\nimport {\n  defaultCoordinates,\n  DndContext, DragOverlay,\n  KeyboardSensor, Modifiers,\n  MouseSensor, PointerActivationConstraint,\n  TouchSensor,\n  Translate,\n  useSensor, useSensors,\n} from '@dnd-kit/core';\nimport { DragEndEvent } from '@dnd-kit/core/dist/types';\nimport { Droppable } from '../containers/Droppable';\nimport { Text } from './Text';\nimport { Placements } from './Placements';\nimport { Image } from './Image';\nimport { scaleTo } from '../utils/helpers';\nimport { createPortal } from 'react-dom';\n\ninterface Props {\n  placements: Placement[];\n  attachments: Attachment[];\n  pageDimensions: Dimensions;\n  removeAttachment: (id: string) => void;\n  updateAttachment: (id: string, attachment: Partial<Attachment>) => void;\n  scale?:number;\n}\n\nexport const Attachments: React.FC<Props> = (\n  {\n    placements,\n  attachments,\n  pageDimensions,\n    removeAttachment,\n  updateAttachment,\n    scale,\n}) => {\n  const [initialWindowScroll, setInitialWindowScroll] = useState(defaultCoordinates);\n  const [draggingAttach, setDraggingAttach] = useState<Attachment | null>(null);\n  const [draggingId, setDraggingId] = useState<string | null>(null);\n  const [snapshot, setSnapshot] = useState<ReactNode | null>(null);\n\n  useEffect(()=>{\n      if(draggingId){\n        const attachment = attachments.find(a=> a.id === draggingId) || null\n        let snapshot : ReactNode = null\n        if(attachment?.type === AttachmentTypes.TEXT){\n          snapshot = <Text {...attachment as TextAttachment} />\n        }else if(attachment?.type === AttachmentTypes.IMAGE) {\n          snapshot = <Image {...attachment as ImageAttachment} />\n        }\n        setDraggingAttach(attachment)\n        setSnapshot(snapshot)\n      }\n    }\n    , [draggingId])\n\n  const handleAttachmentUpdate = (id: string) => (\n    attachment: Partial<Attachment>\n  ) => updateAttachment(id, attachment );\n\n  function getAttachmentJsx(attachment: Attachment, key?: string,){\n    if (attachment.type === AttachmentTypes.IMAGE) {\n      return (\n        <DraggableImage\n          key={key}\n          hidden={draggingId === attachment.id}\n          pageWidth={pageDimensions.width}\n          pageHeight={pageDimensions.height}\n          removeImage={() => removeAttachment(attachment.id)}\n          updateImageAttachment={handleAttachmentUpdate(attachment.id)}\n          {...(attachment as ImageAttachment)}\n        />\n      );\n    }else{\n      return (\n        <DraggableText\n          key={key}\n          hidden={draggingId === attachment.id}\n          pageWidth={pageDimensions.width}\n          pageHeight={pageDimensions.height}\n          removeText={() => removeAttachment(attachment.id)}\n          updateTextAttachment={handleAttachmentUpdate(attachment.id)}\n          {...(attachment as TextAttachment)}\n        />\n      )\n    }\n  }\n\n  return (\n    <DndContext\n      onDragStart={event => {\n        setDraggingId(event.active.id)\n        setInitialWindowScroll({\n          x: window.scrollX,\n          y: window.scrollY,\n        });\n      }}\n      onDragEnd={event => {\n        let updated= {}\n        if(event.over){\n          const coverId = event.over.id\n          const placement= placements.find(p=> p.id === coverId)!\n          updated = {\n            x: placement.x * (scale || 1),\n            y: placement.y * (scale || 1),\n            column_id: coverId,\n          }\n        }else{\n          updated = {\n            x: event.delta.x + (draggingAttach?.x || 0)  - initialWindowScroll.x,\n            y: event.delta.y + (draggingAttach?.y || 0)  - initialWindowScroll.y,\n            column_id: null,\n          }\n        }\n        updateAttachment(event.active.id, updated)\n        setDraggingId('')\n      }}\n      onDragCancel={() => setDraggingId('')}\n    >\n      <Placements\n        placements={placements}\n        attachments={attachments}\n        scale={scale}\n      />\n\n      {attachments.map(a => {\n        const key = a.id;\n        return getAttachmentJsx(a, key)\n      })}\n\n      {createPortal(\n        <DragOverlay>\n          {snapshot}\n        </DragOverlay>,\n        document.body\n      )}\n    </DndContext>\n  )\n};\n","export const scaleTo = (\n  w: number,\n  h: number,\n  max: number\n): {\n  width: number;\n  height: number;\n} => {\n  let scale = 1;\n  if (w > max) {\n    scale = max / w;\n  }\n\n  if (h > max) {\n    scale = Math.min(scale, max / h);\n  }\n\n  const width = w * scale;\n  const height = h * scale;\n  return {\n    width,\n    height,\n  };\n};\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  createRef,\n  useReducer,\n  ReactNode,\n  MouseEventHandler,\n  CSSProperties,\n} from 'react';\nimport { Image, Image as Component } from '../components/Image';\nimport { Position, ResizableDelta, Rnd } from 'react-rnd';\nimport { DraggableData, DraggableEvent } from 'react-draggable';\nimport { Direction } from 're-resizable/lib/resizer';\nimport { DraggableImage } from './DraggableImage';\nimport { readAsDataURL, readAsImage } from '../utils/asyncReader';\nimport uuid from 'uuid';\nimport { AttachmentTypes } from '../entities';\nimport { scaleTo } from '../utils/helpers';\n\ninterface Props {\n  children?:ReactNode | null,\n  onClick?: MouseEventHandler;\n  style?: CSSProperties;\n}\n\nexport const Candidate = (\n  {\n    children,\n    onClick,\n    style,\n  }: Props) => {\n\n  return (\n    <div\n      onClick={onClick}\n      style={{\n        margin: '0.5rem',\n        float: 'left',\n        ...style,\n      }}\n    >\n      {children}\n  </div>\n  )\n};\n","import React, { useState, useEffect, useRef, createRef, useReducer } from 'react';\nimport { Image, Image as Component } from '../components/Image';\nimport { Position, ResizableDelta, Rnd } from 'react-rnd';\nimport { DraggableData, DraggableEvent } from 'react-draggable';\nimport { Direction } from 're-resizable/lib/resizer';\nimport { DraggableImage } from './DraggableImage';\nimport { readAsDataURL, readAsImage } from '../utils/asyncReader';\nimport uuid from 'uuid';\nimport { AttachmentTypes } from '../entities';\nimport { scaleTo } from '../utils/helpers';\nimport { Candidate } from './Candidate';\n\ninterface Props {\n  attachment: ImageAttachment\n  addAttachment?: (attachment: Attachment) => void;\n  scale?: number;\n}\n\nconst IMAGE_MAX_SIZE = 80;\nexport const CandidateImage = (\n  {\n    attachment,\n    addAttachment,\n    scale = 1,\n}: Props) => {\n  function getScaledImage(attachment: ImageAttachment): ImageAttachment{\n    const { width, height } = scaleTo(\n      attachment.width,\n      attachment.height,\n      IMAGE_MAX_SIZE,\n    )\n    return {\n      ...attachment,\n      x: attachment.x * scale,\n      y: attachment.y * scale,\n      width: width * scale,\n      height: height * scale,\n    }\n  }\n\n  return (\n    <Candidate\n      onClick={e=>{\n        if(addAttachment)\n          addAttachment({\n            ...attachment,\n            id: uuid.v4()\n          })}\n      }\n    >\n      <Image\n        {...getScaledImage(attachment)}\n        style={{\n          cursor: 'pointer'\n        }}\n      />\n    </Candidate>\n  )\n};\n","import { openDB, DBSchema } from 'idb';\n\nconst IMAGES_TABLE_NAME = 'imageFiles';\nconst PDFS_TABLE_NAME = 'pdfs';\n\ninterface MyDB extends DBSchema {\n  [IMAGES_TABLE_NAME]: {\n    key: string;\n    value: File;\n  };\n  [PDFS_TABLE_NAME]: {\n    key: string;\n    value: File;\n  };\n}\n\nconst dbPromise = openDB<MyDB>('MY_DB', 1, {\n  upgrade(db, oldVersion, newVersion, transaction) {\n    db.createObjectStore(IMAGES_TABLE_NAME);\n    db.createObjectStore(PDFS_TABLE_NAME);\n  },\n  blocked() {\n    // …\n  },\n  blocking() {\n    // …\n  },\n  terminated() {\n    // …\n  },\n});\n\nexport async function saveImageFile(value: File, key: string) {\n  const db = await dbPromise;\n  return await db.put(IMAGES_TABLE_NAME, value, key);\n}\n\nexport async function getAllImageFiles() {\n  const db = await dbPromise;\n  return await db.getAll(IMAGES_TABLE_NAME);\n}\n\nexport async function removeAllImageFiles() {\n  const db = await dbPromise;\n  const transaction = db.transaction([IMAGES_TABLE_NAME], 'readwrite');\n  await transaction.objectStore(IMAGES_TABLE_NAME).clear();\n}\n\nexport async function savePdfFile(value: File, key: string) {\n  const db = await dbPromise;\n  return await db.put(PDFS_TABLE_NAME, value, key);\n}\n\nexport async function getAllPdfFiles() {\n  const db = await dbPromise;\n  return await db.getAll(PDFS_TABLE_NAME);\n}\n\nexport async function removeAllPdfFiles() {\n  const db = await dbPromise;\n  await db.deleteObjectStore(PDFS_TABLE_NAME);\n  await db.createObjectStore(PDFS_TABLE_NAME);\n}\n","import { useReducer, useCallback, useState, useEffect } from 'react';\nimport {\n  getAllImageFiles,\n  removeAllImageFiles,\n  saveImageFile,\n} from '../utils/StorageService';\nimport { fileToImage } from './useUploader';\n\nexport const useDrawer = () => {\n  const [allCandidates, setAllCandidates] = useState<Attachment[]>([]);\n  const [flag, setFlag] = useState(false);\n\n  useEffect(() => {\n    async function func() {\n      const files = await getAllImageFiles();\n      const images = await Promise.all(\n        files.map(async (file) => await fileToImage(file))\n      );\n      setAllCandidates(images);\n    }\n    func().then();\n  }, [flag]);\n\n  const refresh = () => setFlag(!flag);\n\n  return {\n    allCandidates: allCandidates,\n    saveImage: async (newAttachment: ImageAttachment) => {\n      await saveImageFile(newAttachment.file, newAttachment.id);\n      refresh();\n    },\n    removeAllImages: async () => {\n      await removeAllImageFiles();\n      refresh();\n    },\n  };\n};\n","export const mockPlacements = (): Placement[] => {\n  const arr: Placement[] = [];\n\n  const width = 91;\n  const height = 50;\n  const offsetX = 103;\n  const offsetY = 470;\n\n  for (let x = 0; x < 5; x++) {\n    for (let y = 0; y < 4; y++) {\n      arr.push({\n        height,\n        width,\n        x: offsetX + width * x,\n        y: offsetY + height * y,\n        id: `${x}-${y}`,\n      });\n    }\n  }\n  return arr;\n};\n","import React, { useEffect, useRef, useState } from 'react';\n\ninterface Props {\n  page: any;\n  dimensions?: Dimensions;\n  setDimensions?: ({ width, height }: Dimensions) => void;\n  scale?:number;\n}\n\nexport const Page = ({ page, dimensions, setDimensions, scale=1 }: Props) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [width, setWidth] = useState(dimensions?.width || 0);\n  const [height, setHeight] = useState(dimensions?.height || 0);\n\n  useEffect(() => {\n    renderPage();\n    async function renderPage(){\n      const _page = await page;\n      const canvas = canvasRef.current\n      if (_page) {\n        const context = canvas?.getContext('2d');\n        const viewport = _page.getViewport({ scale });\n\n        setWidth(viewport.width);\n        setHeight(viewport.height);\n\n        if (context) {\n          await _page.render({\n            canvasContext: canvas?.getContext('2d'),\n            viewport,\n          }).promise;\n\n          const newDimensions = {\n            width: viewport.width,\n            height: viewport.height,\n          };\n\n          if(setDimensions) setDimensions(newDimensions as Dimensions);\n        }\n      }\n    }\n  }, [page, setDimensions]);\n\n  return (\n    <div>\n      <canvas ref={canvasRef} width={width} height={height} />\n    </div>\n  );\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Page } from '../components/Page';\nimport { Attachments } from '../components/Attachments';\nimport { mockPlacements } from '../models/MockPlacements';\nimport { Card } from 'react-bootstrap';\n\ninterface Props {\n  currentPage: any;\n  dimensions?: Dimensions;\n  setDimensions?: ({ width, height }: Dimensions) => void;\n  children?: React.ReactNode | null;\n  scale?:number;\n}\n\nexport const Scene = (\n  {\n    currentPage, dimensions, setDimensions ,children, scale\n  }: Props) => {\n  return (\n      <Card\n        style={{\n          display: 'table', // for look more compact\n        }}\n      >\n        <Page\n          dimensions={dimensions}\n          setDimensions={setDimensions}\n          page={currentPage}\n          scale={scale}\n        />\n        {children}\n      </Card>\n  )\n};\n","import React, { useState, useEffect, useRef, createRef, useReducer, ReactNode, MouseEventHandler } from 'react';\nimport { Image, Image as Component } from '../components/Image';\nimport { Position, ResizableDelta, Rnd } from 'react-rnd';\nimport { DraggableData, DraggableEvent } from 'react-draggable';\nimport { Direction } from 're-resizable/lib/resizer';\nimport { DraggableImage } from './DraggableImage';\nimport { readAsDataURL, readAsImage } from '../utils/asyncReader';\nimport uuid from 'uuid';\nimport { AttachmentTypes } from '../entities';\nimport { scaleTo } from '../utils/helpers';\nimport { Candidate } from './Candidate';\nimport { Button } from 'react-bootstrap';\n\ninterface Props {\n  children?:ReactNode | null,\n  onClick?: MouseEventHandler;\n  scale?: number;\n}\n\nexport const CandidateText = (\n  {\n    onClick,\n    children,\n    scale,\n  }: Props) => {\n  return (\n    <Candidate>\n      <Button\n        style={{\n          width: '100%',\n          height: '5rem',\n        }}\n        onClick={onClick}>\n        {children}\n      </Button>\n    </Candidate>\n  )\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Pdf, usePdf } from './hooks/usePdf';\nimport { Button, Col, Container, Nav, Row } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useAttachments } from './hooks/useAttachments';\nimport { AttachmentTypes } from './entities';\nimport { Attachments as PageAttachments } from './components/Attachments';\nimport { UploadTypes, useUploader } from './hooks/useUploader';\nimport uuid from 'uuid';\nimport { CandidateImage } from './containers/CandidateImage';\nimport { useDrawer } from './hooks/useDrawer';\n\nimport { BsChevronLeft, BsChevronRight, BsFillCloudDownloadFill, BsFillCloudUploadFill } from 'react-icons/bs';\nimport { mockPlacements } from './models/MockPlacements';\nimport { Scene } from './containers/Scene';\nimport { scaleTo } from './utils/helpers';\nimport { CandidateText } from './containers/CandidateText';\n\nconst IMAGE_MAX_SIZE = 80;\nconst App: React.FC<{}> = () => {\n  const [ scale, setScale ] = useState(1.65);\n  const { file, setPdf, pageIndex, isMultiPage, isFirstPage, isLastPage, currentPage, isSaving, savePdf, previousPage, nextPage, setDimensions, name, dimensions } = usePdf();\n  const { saveImage, allCandidates, removeAllImages } = useDrawer();\n  const { addAttachment, allPageAttachments, pageAttachments, resetAttachments, updateAttachments, removeAttachments, setPageIndex } = useAttachments();\n  const isPdfLoaded = !!file\n\n  const { inputRef: pdfRef, handleUpload: handlePdfUpload, fileOnChange: pdfOnChange } = useUploader({\n    use: UploadTypes.PDF,\n    afterUploadPdf: (uploaded: Pdf)=>{\n      setPdf(uploaded);\n      const numberOfPages = uploaded.pages.length;\n      resetAttachments(numberOfPages)\n    }\n  });\n\n  const { inputRef: imgRef, handleUpload: handleImageUpload, fileOnChange: imgOnChange } = useUploader({\n    use: UploadTypes.IMAGE,\n    afterUploadImage: (attachment: ImageAttachment)=>{\n        saveImage(attachment).then()\n        addScaledAttachment(attachment)\n      }\n  });\n\n  useEffect(() => setPageIndex(pageIndex), [pageIndex, setPageIndex]);\n\n  const handleText = () => {\n    const newTextAttachment: TextAttachment = {\n      id: uuid.v4(),\n      type: AttachmentTypes.TEXT,\n      x: 0,\n      y: 0,\n      width: 120,\n      height: 25,\n      size: 16,\n      lineHeight: 1.4,\n      fontFamily: 'Times-Roman',\n      text: 'Enter Text Here',\n    };\n    addScaledAttachment(newTextAttachment)\n  };\n\n  const handleSave = () => savePdf(getUnscaledAllPageAttachments(allPageAttachments))\n\n  const addScaledAttachment = (attachment: Attachment) => {\n    addAttachment(getScaledAttachment(attachment));\n  };\n\n  function getScaledAttachment(attachment: Attachment):Attachment{\n    if(attachment.type === AttachmentTypes.TEXT){\n      attachment= getScaledText(attachment as TextAttachment)\n    }else if(attachment.type === AttachmentTypes.IMAGE){\n      attachment=  getScaledImage(attachment as ImageAttachment)\n    }\n   return attachment;\n  }\n\n  function getScaledText(attachment: TextAttachment): TextAttachment{\n    return {\n      ...attachment,\n      x: attachment.x * scale,\n      y: attachment.y * scale,\n      width: attachment.width * scale,\n      height: attachment.height * scale,\n      size: attachment.size? attachment.size * scale : undefined,\n    }\n  }\n\n  function getScaledImage(attachment: ImageAttachment): ImageAttachment{\n    const { width, height } = scaleTo(\n      attachment.width,\n      attachment.height,\n      IMAGE_MAX_SIZE,\n    )\n    return {\n      ...attachment,\n      x: attachment.x * scale,\n      y: attachment.y * scale,\n      width: width * scale,\n      height: height * scale,\n    }\n  }\n\n  function getUnscaledAllPageAttachments(_allPageAttachments: Attachments[]):Attachments[]{\n    return _allPageAttachments.map(_pageAttachments => _pageAttachments.map(_allAttachment => getUnscaledAttachment(_allAttachment)))\n  }\n\n  function getUnscaledAttachment(attachment: Attachment):Attachment{\n    if(attachment.type === AttachmentTypes.TEXT){\n      attachment= getUnscaledText(attachment as TextAttachment)\n    }else if(attachment.type === AttachmentTypes.IMAGE){\n      attachment=  getUnscaledImage(attachment as ImageAttachment)\n    }\n    return attachment;\n  }\n\n  function getUnscaledText(attachment: TextAttachment): TextAttachment{\n    return {\n      ...attachment,\n      x: attachment.x / scale,\n      y: attachment.y / scale,\n      width: attachment.width / scale,\n      height: attachment.height / scale,\n      size: attachment.size ? attachment.size / scale : undefined ,\n    }\n  }\n\n  function getUnscaledImage(attachment: ImageAttachment): ImageAttachment{\n    return {\n      ...attachment,\n      x: attachment.x / scale,\n      y: attachment.y / scale,\n      width: attachment.width / scale,\n      height:attachment. height / scale,\n    }\n  }\n\n  const hiddenInputs = (\n    <>\n      <input\n        ref={pdfRef}\n        type=\"file\"\n        accept=\"application/pdf\"\n        onChange={pdfOnChange}\n        style={{ display: 'none' }}\n      />\n      <input\n        ref={imgRef}\n        type=\"file\"\n        accept=\"image/*\"\n        style={{ display: 'none' }}\n        onChange={imgOnChange}\n      />\n    </>\n  )\n\n  let previousButtonStyle= {}\n  if(!isMultiPage || isFirstPage){\n    previousButtonStyle={\n      visibility:'hidden'\n    }\n  }\n\n  let nextPageStyle= {}\n  if(!isMultiPage || isLastPage){\n    nextPageStyle={\n      visibility:'hidden'\n    }\n  }\n\n    return (\n    <div className=\"App\">\n      {hiddenInputs}\n\n      <Container fluid>\n      <div style={{\n        marginTop: '10px'\n      }}>\n        {!isPdfLoaded && (<>\n        <Row className='justify-content-center mt-lg-5'>\n          <div>\n            <h3>上傳一份 Pdf！</h3>\n            <Button onClick={handlePdfUpload}><BsFillCloudUploadFill /> Upload</Button>\n          </div>\n        </Row>\n        </>)}\n        <Row>\n          <Col sm={3}>\n            {isPdfLoaded && (<>\n              <h3>加入附件</h3>\n              <p>\n                這些圖片被儲存在 local 的 IndexedDB。\n                <Button variant=\"link\" onClick={removeAllImages}>清空圖片</Button>\n              </p>\n              <CandidateText scale={scale} onClick={handleText}>\n                新增文字\n              </CandidateText>\n              {allCandidates\n                .filter(attachment=>attachment.type === AttachmentTypes.IMAGE)\n                .map(attachment=>{\n                  return <CandidateImage\n                    key={attachment.id}\n                    attachment={attachment as ImageAttachment}\n                    addAttachment={addScaledAttachment}\n                    scale={scale}\n                  />\n                })\n              }\n              <CandidateText scale={scale} onClick={handleImageUpload}>\n                上傳圖片\n              </CandidateText>\n            </>)}\n          </Col>\n          <Col sm={9}>\n            <div className=\"pt-2 pb-2 d-flex justify-content-between\" style={{\n              width: dimensions?.width || 0,\n            }}>\n              <div>\n                <Button style={previousButtonStyle} className='rounded-circle' variant=\"outline-dark\" onClick={previousPage}><BsChevronLeft /></Button>\n              </div>\n              <div>\n                {isPdfLoaded && (<Nav className=\"justify-content-center\">\n                  <Nav.Link onClick={handlePdfUpload}><BsFillCloudUploadFill /> Upload New</Nav.Link>\n                  <Nav.Link onClick={handleSave}><BsFillCloudDownloadFill /> Save </Nav.Link>\n                </Nav>)}\n              </div>\n\n              <div>\n                <Button style={nextPageStyle} className='rounded-circle' variant=\"outline-dark\" onClick={nextPage}><BsChevronRight /></Button>\n              </div>\n            </div>\n            { currentPage && (\n              <Scene\n                currentPage={currentPage}\n                dimensions={dimensions}\n                setDimensions={setDimensions}\n                scale={scale}\n                >\n                { dimensions && (\n                  <PageAttachments\n                    removeAttachment={removeAttachments}\n                    updateAttachment={updateAttachments}\n                    pageDimensions={dimensions}\n                    attachments={pageAttachments}\n                    placements={mockPlacements()}\n                    scale={scale}\n                  />\n                )}\n              </Scene>\n            )}\n          </Col>\n        </Row>\n\n      </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { prepareAssets } from './utils/prepareAssets';\n\nprepareAssets();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}