{"version":3,"sources":["utils/prepareAssets.ts","utils/asyncReader.ts","utils/pdf.ts","hooks/usePdf.ts","hooks/useAttachments.ts","entities/index.ts","components/Text.tsx","components/Stone.tsx","containers/DraggableText.tsx","components/Image.tsx","containers/DraggableImage.tsx","contexts/ScrollContext.ts","containers/Droppable.tsx","components/Placements.tsx","utils/helpers.ts","components/Attachments.tsx","hooks/useUploader.ts","components/Candidate.tsx","components/CandidateImage.tsx","utils/StorageService.ts","hooks/useDrawer.ts","models/MockPlacements.ts","components/CandidateText.tsx","contexts/MouseContext.ts","components/Clickable.tsx","components/Page.tsx","components/Scrollable.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["scripts","name","src","assets","getAsset","scriptName","fonts","Courier","correction","size","lineHeight","Helvetica","readAsArrayBuffer","標楷體","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsImage","img","Image","Blob","url","window","URL","createObjectURL","readAsDataURL","readAsPDF","a","pdfjsLib","blob","getDocument","promise","save","pdfFile","objects","PDFLib","download","PDFDocument","load","pdfDoc","console","log","pagesProcesses","getPages","map","page","pageIndex","pageObjects","pageHeight","getHeight","embedProcesses","object","type","x","y","width","height","embedJpg","embedPng","drawImage","text","fontSize","fontFamily","embedFont","pdfFont","drawText","font","all","forEach","p","pdfBytes","ActionType","DragActions","Color","AttachmentTypes","TextMode","initialState","allPageAttachments","pageAttachments","reducer","state","action","ADD_ATTACHMENT","newAllPageAttachmentsAdd","attachments","index","attachment","REMOVE_ATTACHMENT","newAllPageAttachmentsRemove","otherPageAttachments","filter","id","UPDATE_ATTACHMENT","newAllPageAttachmentsUpdate","old","UPDATE_PAGE_INDEX","RESET","Array","numberOfPages","fill","Text","forwardRef","ref","listeners","draggableAttrs","onBlur","onChangeText","editing","style","dragAttrs","length","onChange","readOnly","outline","padding","margin","cursor","border","backgroundColor","value","Stone","translateX","translateY","position","children","borderRadius","transform","DraggableText","removeText","pageWidth","updateTextAttachment","hidden","useState","content","setContent","setEditing","useDraggable","attributes","inputRef","node","isDragging","setNodeRef","useEffect","input","current","focus","select","document","getSelection","removeAllRanges","lines","handleOk","e","stopPropagation","okButton","left","top","right","onClick","color","deleteButton","textStyle","borderWidth","borderColor","borderStyle","hiddenStyle","visibility","onDoubleClick","event","currentTarget","desc","alt","DraggableImage","removeImage","resizeImage","onResizeStop","direction","d","strToInt","strPx","strInt","replace","int","parseInt","Error","enable","bottom","topRight","bottomRight","bottomLeft","topLeft","ScrollContext","React","createContext","Droppable","useDroppable","isOver","boxShadow","Placements","placements","placement","key","getHiddenPlaceholder","column_id","scaleTo","w","h","wMax","hMax","scale","Math","min","getResizedAttachment","space","UploadTypes","Attachments","pageDimensions","removeAttachment","updateAttachment","defaultCoordinates","initialWindowScroll","setInitialWindowScroll","draggingId","setDraggingId","scaledAttachments","TEXT","undefined","getScaledText","IMAGE","getScaledImage","getScaledAttachment","scaledPlacements","mouseSensor","useSensor","MouseSensor","activationConstraint","distance","snapshot","scaled","find","handleAttachmentUpdate","Consumer","sensors","onDragStart","active","scrollLeft","scrollTop","onDragEnd","updated","over","delta","onDragCancel","getAttachmentJsx","createPortal","body","useUploader","afterUploadPdf","afterUploadImage","use","uploading","setUploading","createRef","handleUpload","click","fileOnChange","files","dataTransfer","fileToImage","PDF","fileToPdf","uuid","v4","pdf","pages","numPages","_","getPage","Candidate","float","CandidateImage","dbPromise","openDB","upgrade","db","oldVersion","newVersion","transaction","createObjectStore","blocked","blocking","terminated","put","getAllImages","getAllKeys","keys","get","removeAllImageFiles","objectStore","clear","mockPlacements","arr","push","CandidateText","Button","MouseContext","activePosition","elementDimensions","elementOffset","itemDimensions","itemPosition","itemRef","onLoadRefresh","passivePosition","prevActivePosition","Clickable","handleAttachment","addAttachment","lasted","sort","p1","whichPlacement","Provider","Page","dimensions","setDimensions","canvasRef","useRef","setWidth","setHeight","_page","canvas","context","getContext","viewport","getViewport","render","canvasContext","newDimensions","renderPage","Scrollable","className","overflowX","overflowY","App","setHandleAttachment","setName","setPageIndex","setFile","setPages","isMultiPage","setIsMultiPage","isFirstPage","setIsFirstPage","isLastPage","setIsLastPage","isSaving","setIsSaving","setDimensionsHandler","useCallback","currentPage","nextPage","newPageIndex","savePdf","setPdf","_pages","multi","previousPage","usePdf","allCandidates","setAllCandidates","flag","setFlag","images","func","then","refresh","removeAllImages","useDrawer","refreshDrawer","useReducer","dispatch","newAttachment","resetAttachments","removeAttachments","updateAttachments","useAttachments","isPdfLoaded","uploaded","pdfRef","handlePdfUpload","pdfOnChange","saveImageFile","imgRef","handleImageUpload","imgOnChange","message","hiddenInputs","accept","display","previousButtonStyle","nextPageStyle","Container","fluid","Row","Col","sm","variant","newTextAttachment","minHeight","Nav","Link","trackPassivePosition","cursorStyle","Card","Boolean","location","hostname","match","script","createElement","appendChild","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"8RAOMA,EAAoB,CACxB,CACEC,KAAM,WACNC,IAAK,yDAEP,CACED,KAAM,SACNC,IAAK,uDAEP,CACED,KAAM,WACNC,IAAK,sCAEP,CAAED,KAAM,UAAWC,IAAK,6CAGpBC,EAA8B,GACvBC,EAAW,SAACC,GAAD,OAAwBF,EAAOE,IA6BjDC,EAAmB,CACvBC,QAAS,CACPC,WADO,SACIC,EAAcC,GACvB,OAAQD,EAAOC,EAAaD,GAAQ,EAAIA,EAAO,IAGnDE,UAAW,CACTH,WADS,SACEC,EAAcC,GACvB,OAAQD,EAAOC,EAAaD,GAAQ,EAAIA,EAAO,KAGnD,cAAe,CACbD,WADa,SACFC,EAAcC,GACvB,OAAQD,EAAOC,EAAaD,GAAQ,EAAIA,EAAO,KChExCG,GDsEK,2BACbN,GADa,IAEhBO,qBAAK,CACHX,IAAK,UACLM,WAFG,SAEQC,EAAcC,GACvB,OAAQD,EAAOC,EAAaD,GAAQ,MC3ET,SAC/BK,GAEA,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,kBAAMJ,EAAQE,EAAOG,SACrCH,EAAOI,QAAUL,EACjBC,EAAON,kBAAkBE,QAIhBS,EAAc,SAACrB,GAC1B,OAAO,IAAIa,SAAQ,SAACC,EAASC,GAC3B,IAAMO,EAAM,IAAIC,MAGhB,GAFAD,EAAIJ,OAAS,kBAAMJ,EAAQQ,IAC3BA,EAAIF,QAAUL,EACVf,aAAewB,KAAM,CACvB,IAAMC,EAAMC,OAAOC,IAAIC,gBAAgB5B,GACvCsB,EAAItB,IAAMyB,OAEVH,EAAItB,IAAMA,MAKH6B,EAAgB,SAC3BjB,GAEA,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,kBAAMJ,EAAQE,EAAOG,SACrCH,EAAOI,QAAUL,EACjBC,EAAOa,cAAcjB,OAQZkB,EAAS,uCAAG,WAAOlB,GAAP,mBAAAmB,EAAA,sEACA7B,EAAS,YADT,cACjB8B,EADiB,OAGjBC,EAAO,IAAIT,KAAK,CAACZ,IACjBa,EAAMC,OAAOC,IAAIC,gBAAgBK,GAJhB,kBAKhBD,EAASE,YAAYT,GAAKU,SALV,2CAAH,sDCvCf,SAAeC,EAAtB,sC,4CAAO,WACLC,EACAC,EACAvC,GAHK,uBAAAgC,EAAA,sEAKgB7B,EAAS,UALzB,cAKCqC,EALD,gBAMkBrC,EAAS,YAN3B,cAMCsC,EAND,qBAiBYD,EAAOE,YAjBnB,UAiB0C/B,EAAkB2B,GAjB5D,0CAiB+BK,KAjB/B,wBAiBHC,EAjBG,+DAmBHC,QAAQC,IAAI,uBAnBT,oBAuBCC,EAAiBH,EAAOI,WAAWC,IAAlB,uCAAsB,WAAOC,EAAMC,GAAb,mBAAAnB,EAAA,6DACrCoB,EAAcb,EAAQY,GAEtBE,EAAaH,EAAKI,YAClBC,EAAiBH,EAAYH,IAAZ,uCAAgB,WAAOO,GAAP,2CAAAxB,EAAA,yDACjB,UAAhBwB,EAAOC,KAD0B,oBAE3B5C,GAF2B,EAEG2C,GAA9B3C,KAAM6C,EAFqB,EAErBA,EAAGC,EAFkB,EAElBA,EAAGC,EAFe,EAEfA,MAAOC,EAFQ,EAERA,OAFQ,SAKf,eAAdhD,EAAK4C,KALwB,6BAMnBb,EANmB,SAMGjC,EAAkBE,GANrB,yCAMZiD,SANY,wBAM/BvC,EAN+B,2CAQnBqB,EARmB,UAQGjC,EAAkBE,GARrB,0CAQZkD,SARY,wBAQ/BxC,EAR+B,yCAU1B,kBACL2B,EAAKc,UAAUzC,EAAK,CAClBmC,IACAC,EAAGN,EAAaM,EAAIE,EACpBD,QACAC,cAf6B,wCAkBjChB,QAAQC,IAAI,yBAAZ,MAlBiC,wCAqBV,SAAhBU,EAAOC,KArBmB,wBAsB3BC,GAtB2B,EAuBjCF,GADME,EAAGC,EAtBwB,EAsBxBA,EAAGM,EAtBqB,EAsBrBA,KAAMxD,EAtBe,EAsBfA,WAAYyD,EAtBG,EAsBHA,SAAUC,EAtBP,EAsBOA,WAtBP,EAsBmBP,MAtBnB,UAwBbhB,EAAOwB,UAAUD,GAxBJ,eAwB7BE,EAxB6B,0BAyB5B,kBACLnB,EAAKoB,SAASL,EAAM,CAElBM,KAAMF,EACN7D,KAAM0D,EACNzD,aACAiD,IACAC,EAAGN,EAAaa,EAAYP,OAhCG,0DAAhB,uDAJoB,SAyCR7C,QAAQ0D,IAAIjB,GAzCJ,cA0C7BkB,SAAQ,SAACC,GAAD,OAAOA,OA1Cc,2CAAtB,yDAvBlB,UAmEC5D,QAAQ0D,IAAIzB,GAnEb,mCAqEoBH,EAAOP,OArE3B,QAqEGsC,EArEH,OAsEHlC,EAASkC,EAAU3E,EAAM,mBAtEtB,yDAwEH6C,QAAQC,IAAI,uBAxET,wE,sBCMA,ICPF8B,E,0EAAAA,K,cAAAA,E,gCAAAA,E,sCAAAA,E,sCAAAA,E,uCAAAA,M,KAyBL,IC3BYC,EAMAC,EAeAC,EAKAC,EDCNC,EAAsB,CAC1B9B,WAAY,EACZ+B,mBAAoB,GACpBC,gBAAiB,IAGbC,EAAU,SAACC,EAAcC,GAC7B,IAAQnC,EAAmDkC,EAAnDlC,UAAW+B,EAAwCG,EAAxCH,mBAAoBC,EAAoBE,EAApBF,gBAEvC,OAAQG,EAAO7B,MACb,KAAKmB,EAAWW,eACd,IAAMC,EAA2BN,EAAmBjC,KAClD,SAACwC,EAAaC,GAAd,OACEvC,IAAcuC,EAAd,sBACQD,GADR,CACqBH,EAAOK,aACxBF,KAGR,OAAO,2BACFJ,GADL,IAEEH,mBAAoBM,EACpBL,gBAAiBK,EAAyBrC,KAG9C,KAAKyB,EAAWgB,kBACd,IAAMC,EAA8BX,EAAmBjC,KACrD,SAAC6C,EAAsBJ,GAAvB,OACEvC,IAAcuC,EACVP,EAAgBY,QAAO,SAAC/D,GAAD,OAAOA,EAAEgE,KAAOV,EAAOU,MAC9CF,KAGR,OAAO,2BACFT,GADL,IAEEH,mBAAoBW,EACpBV,gBAAiBU,EAA4B1C,KAGjD,KAAKyB,EAAWqB,kBACd,IAAmB,IAAf9C,EACF,OAAOkC,EAGT,IAAMa,EAA8BhB,EAAmBjC,KACrD,SAAC6C,EAAsBJ,GAAvB,OACEvC,IAAcuC,EACVP,EAAgBlC,KAAI,SAACkD,GAAD,OAClBA,EAAIH,KAAOV,EAAOU,GAAlB,2BAA4BG,GAAQb,EAAOK,YAAeQ,KAE5DL,KAGR,OAAO,2BACFT,GADL,IAEEH,mBAAoBgB,EACpBf,gBAAiBe,EAA4B/C,KAGjD,KAAKyB,EAAWwB,kBACd,OAAO,2BACFf,GADL,IAEElC,UAAWmC,EAAOnC,UAClBgC,gBAAiBD,EAAmBI,EAAOnC,aAG/C,KAAKyB,EAAWyB,MACd,MAAO,CACLlD,UAAW,EACXgC,gBAAiB,GACjBD,mBAAoBoB,MAAMhB,EAAOiB,eAAeC,KAAK,KAGzD,QACE,OAAOnB,K,SCpGDR,K,YAAAA,E,cAAAA,E,2BAAAA,M,cAMAC,K,UAAAA,E,gBAAAA,E,gBAAAA,E,cAAAA,E,cAAAA,E,YAAAA,E,YAAAA,E,iBAAAA,E,gBAAAA,E,cAAAA,E,YAAAA,E,eAAAA,M,cAeAC,K,cAAAA,E,aAAAA,M,cAKAC,K,gBAAAA,E,mBAAAA,M,gBCRCyB,EAAOC,sBAAoC,WAapDC,GACG,IAZDC,EAYA,EAZAA,UACAC,EAWA,EAXAA,eACAC,EAUA,EAVAA,OACAC,EASA,EATAA,aASA,IARAC,eAQA,SAPA/C,EAOA,EAPAA,KACAC,EAMA,EANAA,SACAzD,EAKA,EALAA,WACA0D,EAIA,EAJAA,WACA8C,EAGA,EAHAA,MAIEC,EAAS,2BACVN,GACAC,GAGCrG,IAAY,OAAJyD,QAAI,IAAJA,OAAA,EAAAA,EAAMkD,SAAU,GArBd,IAqBH,OAA8ClD,QAA9C,IAA8CA,OAA9C,EAA8CA,EAAMkD,OACjE,OACM,yCACE1D,KAAK,OACLqD,OAAQA,EACRH,IAAKA,EACLS,SAAUL,EACVM,UAAWL,EACXC,MAAK,aACH/C,WACAzD,aACA0D,aACAmD,QAAS,OACTC,QAAS,EACTC,OAAQ,EACRC,OAAQT,EAAU,OAAQ,OAC1BU,OAAQ,QACRC,gBAAiB,SACdV,GAELW,MAAO3D,EACPzD,KAAMA,GACDwG,EAAS,GAAKE,OC3ChBW,EAAQ,SAAC,GAOP,IALXZ,EAKU,EALVA,MACAa,EAIU,EAJVA,WACAC,EAGU,EAHVA,WACAC,EAEU,EAFVA,SACAC,EACU,EADVA,SAEF,OACE,yBACEhB,MAAK,yBACHe,SAAU,YACPA,GAFA,IAGHpE,MAAO,OACPC,OAAQ,OACR2D,OAAQ,OACRU,aAAc,SACdC,UAAU,cAAD,OAAgBL,EAAhB,wBAA0CC,EAA1C,4DACNd,IAEJgB,I,QCfMG,EAAgB,SAAC,GAcC,IAZ3BpC,EAY0B,EAZ1BA,GACD/B,EAW2B,EAX3BA,KAGAoE,GAQ2B,EAV3BhF,WAU2B,EAT3BiF,UAS2B,EAR3BD,YACAE,EAO2B,EAP3BA,qBACCrE,EAM0B,EAN1BA,SACAzD,EAK0B,EAL1BA,WACA0D,EAI0B,EAJ1BA,WAI0B,IAH1BqE,cAG0B,SAF1B9E,EAE0B,EAF1BA,EACAC,EAC0B,EAD1BA,EAEF,EAA8B8E,mBAASxE,GAAQ,IAA/C,mBAAOyE,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOzB,EAAP,KAAgB4B,EAAhB,KAEA,EAAwFC,YAAa,CACnG7C,OADiBa,EAAnB,EAAOiC,WAAkCC,EAAzC,EAAmCC,KAA4BpC,GAA/D,EAAmDqC,WAAnD,EAA+DrC,WAAWsC,EAA1E,EAA0EA,WAI1EC,qBAAU,WACR,GAAGnC,EAAQ,CACT,IAAMoC,EAAQL,EAASM,QACnBD,IACFA,EAAME,QACLF,EAA2BG,cAE3B,CAAC,IAAD,EAEH,GADA,UAAAC,SAASC,sBAAT,SAAyBC,kBACV,KAAZhB,GAAkBL,EACnBA,SACI,GAAGE,EAAqB,CAE5BA,EAAqB,CACnBoB,MAFY,CAACjB,GAGbzE,KAAMyE,QAIZ,CAAC1B,IAYH,SAAS4C,EAAUC,GACjBA,EAAEC,kBACFlB,GAAW,GAcb,IAAMmB,EACJ,kBAAC,EAAD,CACE/B,SAAU,CACRgC,KAAM,EACNC,IAAK,EACLC,MAAO,GAETpC,WAAY,IACZC,WAAY,OACZd,MAAO,CACLU,gBAAiB,UAGnB,kBAAC,IAAD,CACEwC,QAASP,EACT3C,MAAO,CACLQ,OAAQ,UACR2C,MAAO,UACPxG,MAAO,OACPC,OAAQ,WAIVwG,EACJ,kBAAC,EAAD,CACErC,SAAU,CACRgC,KAAM,EACNC,IAAK,EACLC,MAAO,GAETpC,WAAY,IACZC,WAAY,OACZd,MAAO,CACLU,gBAAiB,UAGnB,kBAAC,IAAD,CACEwC,QAhDN,SAA0BN,GACrBxB,IACDwB,EAAEC,kBACFzB,MA8CEpB,MAAO,CACLQ,OAAQ,UACR2C,MAAM,qBACNxG,MAAO,OACPC,OAAQ,WAIZyG,EAA2B,CAC7BC,YAAa,QACbC,YAAa,OACbC,YAAazD,EAAS,QAAS,UAG3B0D,EAA6BlC,EAC/B,CAACmC,WAAY,UACb,GAEJ,OACE,yBACE1D,MAAK,aACHe,SAAU,WACV,KAAO,GAAP,cAAWtE,QAAX,IAAWA,IAAK,EAAhB,MACA,IAAM,GAAN,cAAUC,QAAV,IAAUA,IAAK,EAAf,OACG+G,GAELE,cArFJ,SAAoBf,GAClBA,EAAEC,kBACFlB,GAAW,IAoFTuB,QArEJ,SAAqBN,GACnBA,EAAEC,mBAqEA9D,GAAIA,GAEHgB,EAAU+C,EAAWM,EACtB,kBAAC5D,EAAD,CACEE,IAAKuC,EACLtC,UAAWA,EACXC,eAAgBA,EAChBC,OAAQ8C,EACR3F,KAAMyE,EACNxE,SAAUA,EACVzD,WAAcA,EACd0D,WAAYA,EACZ6C,QAASA,EACTD,aAzGe,SAAC8D,GACpB,IAAMjD,EAAQiD,EAAMC,cAAclD,MAClCe,EAAWf,IAwGPX,MAAOqD,MC5JF9I,EAAQkF,sBAAoC,WAUvDC,GACG,IATD/C,EASA,EATAA,MACAC,EAQA,EARAA,OACAtC,EAOA,EAPAA,IACA0F,EAMA,EANAA,MACAL,EAKA,EALAA,UACAC,EAIA,EAJAA,eACAkE,EAGA,EAHAA,KAKF,OACE,uCACE9D,MAAK,aACHrD,MAAOA,GAAS,OAChBC,OAAQA,GAAU,OAClB4D,OAAQ,QACLR,GAELhH,IAAKsB,EAAItB,IACT0G,IAAKA,GACDC,EACAC,EAVN,CAWEmE,IAAKD,Q,QCpBEE,EAAiB,SAAC,GAaC,IAX9BjF,EAW6B,EAX7BA,GACAzE,EAU6B,EAV7BA,IACAqC,EAS6B,EAT7BA,MACAC,EAQ6B,EAR7BA,OAEAqH,GAM6B,EAP7B5C,UAO6B,EAN7B4C,aAM6B,KAL7B7H,WAK6B,EAJ3BmF,eAI2B,SAH3B9E,EAG2B,EAH3BA,EACAC,EAE2B,EAF3BA,EACAwH,EAC2B,EAD3BA,YAEF,EAAwEtC,YAAa,CACnF7C,OADiBa,EAAnB,EAAOiC,WAAwClC,GAA/C,EAAmCqC,WAAnC,EAA+CrC,WAAWsC,EAA1D,EAA0DA,WA8B1D,IAAMmB,EACJ,kBAAC,EAAD,CACErC,SAAU,CACRgC,KAAM,EACNC,IAAK,EACLC,MAAO,GAETpC,WAAY,IACZC,WAAY,OACZd,MAAO,CACLU,gBAAiB,UAGnB,kBAAC,IAAD,CACEwC,QAzBN,SAAsBN,GACjBqB,IACDrB,EAAEC,kBACFoB,MAuBEjE,MAAO,CACLQ,OAAQ,UACR2C,MAAM,qBACNxG,MAAO,OACPC,OAAQ,WASV6G,EAA6BlC,EAC/B,CAACmC,WAAY,UACb,GAEJ,OACE,yBACE3E,GAAIA,EACJiB,MAAK,aACHe,SAAU,WACV,KAAO,GAAP,cAAWtE,QAAX,IAAWA,IAAK,EAAhB,MACA,IAAM,GAAN,cAAUC,QAAV,IAAUA,IAAK,EAAf,OACG+G,GAELP,QA7CJ,SAAiBN,GACfA,EAAEC,oBA8CA,kBAAC,IAAD,CACEtJ,KAAM,CACJoD,QACAC,UAEFuH,aA1EgC,SAACvB,EAAGwB,EAAW1E,EAAK2E,GACtD,SAASC,EAASC,GAChB,IAAMC,EAAQD,EAAME,QAAQ,KAAK,IAC3BC,EAAKC,SAASH,GACpB,GAAGE,EACD,OAAOA,EAEP,MAAM,IAAIE,MAAML,EAAO,wBAA0BG,EAAM,cAAeF,GAIvEN,GACDA,EAAYI,EAAS5E,EAAIM,MAAMrD,OAAQ2H,EAAS5E,EAAIM,MAAMpD,UA+D1DiI,OAAQ,CACN7B,KAAK,EACLC,OAAO,EACP6B,QAAQ,EACR/B,MAAM,EACNgC,UAAU,EACVC,aAAa,EACbC,YAAY,EACZC,SAAS,IAGX,kBAAC,EAAD,CACExF,IAAKuC,EACLtC,UAAWA,EACXC,eAAgBA,EAChBI,MAzCwB,CAC9BS,OAAO,oBACPD,OAAQ,QAwCFlG,IAAKA,KAER2J,GAAeb,IC/HT+B,EAAgBC,IAAMC,cAAgD,MCW5E,SAASC,EAAT,GAQM,IANTtE,EAMQ,EANRA,SACAjC,EAKQ,EALRA,GACAtC,EAIQ,EAJRA,EACAC,EAGQ,EAHRA,EACAC,EAEQ,EAFRA,MACAC,EACQ,EADRA,OAEF,EAA6B2I,YAAa,CACxCxG,OADKyG,EAAP,EAAOA,OAAQvD,EAAf,EAAeA,WAIXxB,EAAuB,CACzB0C,MAAO,OACPK,YAAa,SACbF,YAAa,OAef,OAbGkC,IACD/E,EAAS,CACPgF,UAAW,qEAIZzE,IACDP,EAAO,CACL0C,MAAM,qBACNK,YAAa,UAKf,yBACE9D,IAAKuC,EACLjC,MAAK,aACHrD,QACAC,SACAmE,SAAU,WACVgC,KAAK,GAAD,cAAKtG,QAAL,IAAKA,IAAK,EAAV,MACJuG,IAAI,GAAD,cAAKtG,QAAL,IAAKA,IAAK,EAAV,OAEA+D,IAGJO,GCrCA,IAAM0E,EAA8B,SAAC,GAIrC,IAFHC,EAEE,EAFFA,WACAnH,EACE,EADFA,YAgBF,OACE,oCACGmH,EAAW3J,KAAI,SAAA4J,GACd,IAAM7G,EAAK6G,EAAU7G,GACrB,OAAO,kBAACuG,EAAD,eACLO,IAAK9G,GACD6G,GAnBZ,SAA8BpH,GAC5B,IAAMrE,EAASqE,EAAYxC,KAAI,SAAAjB,GAC7B,IAAM8K,EAAM9K,EAAEgE,GACd,OAAQ,yBAAKwC,QAAM,EAACsE,IAAKA,OAG3B,OAAI1L,EAAO+F,OAGF/F,EAFA,KAcF2L,CAAoB,OAACtH,QAAD,IAACA,OAAD,EAACA,EAAaM,QAAO,SAAA/D,GAAC,OAAIA,EAAEgL,YAAchH,YCjD5DiH,EAAU,SACrBC,EACAC,EACAC,GAKI,IAJJC,EAIG,uDAJYD,EAKXE,EAAQ,EACRJ,EAAIE,IACNE,EAAQF,EAAOF,GAGbC,EAAIE,IACNC,EAAQC,KAAKC,IAAIF,EAAOD,EAAOF,IAGjC,IAAMvJ,EAAQsJ,EAAII,EACZzJ,EAASsJ,EAAIG,EACnB,MAAO,CACL1J,QACAC,WAuBG,SAAS4J,EACd9H,EACAkH,GAEA,MAA0BI,EACxBtH,EAAW/B,MACX+B,EAAW9B,OACXgJ,EAAUjJ,MACViJ,EAAUhJ,QAJJD,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAOXH,EAAImJ,EAAUnJ,EACZC,EAAIkJ,EAAUlJ,EAGpB,GAAIC,EAAQiJ,EAAUjJ,MAAO,CAC3B,IAAM8J,EAAQb,EAAUjJ,MAAQA,EAChCF,EAAImJ,EAAUnJ,EAAIgK,EAAQ,EAE5B,OAAO,2BACF/H,GADL,IAEEjC,IACAC,IACAqJ,UAAWH,EAAU7G,GACrBpC,QACAC,WCvCJ,ICzBY8J,ED2BCC,EAA+B,SAAC,GAQtC,IANHhB,EAME,EANFA,WACFnH,EAKI,EALJA,YACAoI,EAII,EAJJA,eACEC,EAGE,EAHFA,iBACFC,EAEI,EAFJA,iBAEI,IADFT,aACE,MADI,EACJ,EACJ,EAAsD7E,mBAASuF,KAA/D,mBAAOC,EAAP,KAA4BC,EAA5B,KACA,EAAoCzF,mBAAwB,MAA5D,mBAAO0F,EAAP,KAAmBC,EAAnB,KACMC,EAAkC5I,EAAYxC,KAAI,SAAAjB,GAAC,OAoEzD,SAA6B2D,GACxBA,EAAWlC,OAASsB,EAAgBuJ,KACrC3I,EAOJ,SAAuBA,GACrB,OAAO,2BACFA,GADL,IAEEjC,EAAGiC,EAAWjC,EAAI4J,EAClB3J,EAAGgC,EAAWhC,EAAI2J,EAClB1J,MAAO+B,EAAW/B,MAAQ0J,EAC1BzJ,OAAQ8B,EAAW9B,OAASyJ,EAC5BpJ,SAAUyB,EAAWzB,SAAUyB,EAAWzB,SAAWoJ,OAAQiB,IAdjDC,CAAc7I,GACnBA,EAAWlC,OAASsB,EAAgB0J,QAC3C9I,EAgBJ,SAAwBA,GACtB,MAA0BsH,EACxBtH,EAAW/B,MACX+B,EAAW9B,OAxGY,GACC,IAqGlBD,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAMf,OAAO,2BACF8B,GADL,IAEEjC,EAAGiC,EAAWjC,EAAI4J,EAClB3J,EAAGgC,EAAWhC,EAAI2J,EAClB1J,MAAOA,EAAQ0J,EACfzJ,OAAQA,EAASyJ,IA5BLoB,CAAe/I,IAE7B,OAAOA,EA1EkDgJ,CAAoB3M,MACzE4M,EAAgChC,EAAW3J,KAAI,SAAAyB,GAAC,kCACjDA,GADiD,IAEpDd,MAAOc,EAAEd,MAAQ0J,EACjBzJ,OAAQa,EAAEb,OAASyJ,EACnB5J,EAAGgB,EAAEhB,EAAI4J,EACT3J,EAAGe,EAAEf,EAAI2J,OAGLuB,EAAcC,YAAUC,IAAa,CACzCC,qBAAsB,CACpBC,SAAU,KAIVC,EAAsB,KAC1B,GAAGf,EAAY,CACb,IAAMgB,EAASd,EAAkBe,MAAK,SAAApN,GAAC,OAAIA,EAAEgE,KAAOmI,KAChDgB,EAAO1L,OAASsB,EAAgBuJ,KAClCY,EAAW,kBAACzI,EAAS0I,GACZA,EAAO1L,OAASsB,EAAgB0J,QACzCS,EAAW,kBAAC,EAAUC,SAGxBD,EAAW,KAGb,IAAMG,EAAyB,SAACrJ,GAAD,OAAgB,SAC7CL,GAD6C,OAE1CoI,EAAiB/H,EAAIL,KA2E1B,OACE,kBAACyG,EAAckD,SAAf,MACG,SAAA3I,GAAG,OACF,kBAAC,IAAD,CACE4I,QAAS,CAACV,GACVW,YAAa,SAAA3E,GAAU,IAAD,IACpBuD,EAAcvD,EAAM4E,OAAOzJ,IAC3BkI,EAAuB,CACrBxK,GAAM,OAAHiD,QAAG,IAAHA,GAAA,UAAAA,EAAK0C,eAAL,eAAcqG,aAAc,EAC/B/L,GAAM,OAAHgD,QAAG,IAAHA,GAAA,UAAAA,EAAK0C,eAAL,eAAcsG,YAAa,KAGlCC,UAAW,SAAA/E,GACT,IACIgF,EADElK,EAAaF,EAAY2J,MAAK,SAAApN,GAAC,OAAGA,EAAEgE,KAAOmI,KAE9CtD,EAAMiF,KAEPD,EAASpC,EAAqB9H,EADbiH,EAAWwC,MAAK,SAAA1K,GAAC,OAAGA,EAAEsB,KAAO6E,EAAMiF,KAAM9J,OAG1D6J,EAAU,CACRnM,GAAImH,EAAMkF,MAAMrM,EAAIuK,EAAoBvK,GAAK4J,GAAS3H,EAAWjC,GAAK,GACtEC,GAAIkH,EAAMkF,MAAMpM,EAAIsK,EAAoBtK,GAAK2J,GAAS3H,EAAWhC,GAAK,GACtEqJ,eAAWuB,GAGfc,EAAuBxE,EAAM4E,OAAOzJ,GAApCqJ,CAAwCQ,GACxCzB,EAAc,OAEhB4B,aAAc,kBAAM5B,EAAc,QAElC,kBAAC,EAAD,CACExB,WAAYgC,EACZnJ,YAAaA,IAGd4I,EAAkBpL,KAAI,SAAAjB,GAErB,OAvGV,SAA0B2D,EAAwBmH,GAChD,OAAInH,EAAWlC,OAASsB,EAAgB0J,MAEpC,kBAAC,EAAD,eACE3B,IAAKA,EACL9G,GAAI8G,EACJtE,OAAQ2F,IAAexI,EAAWK,GAClCsC,UAAWuF,EAAejK,MAC1BP,WAAYwK,EAAehK,OAC3BqH,YAAa,kBAAM4C,EAAiBnI,EAAWK,MAE1CL,IAKP,kBAAC,EAAD,eACEmH,IAAKA,EACL9G,GAAI8G,EACJtE,OAAQ2F,IAAexI,EAAWK,GAClCsC,UAAWuF,EAAejK,MAC1BP,WAAYwK,EAAehK,OAC3BwE,WAAY,kBAAMyF,EAAiBnI,EAAWK,KAC9CuC,qBAAsB8G,EAAuB1J,EAAWK,KACnDL,IA+EIsK,CAAiBjO,EADZA,EAAEgE,OAIfkK,uBACC,kBAAC,IAAD,KACGhB,GAEH1F,SAAS2G,W,2BC1LTxC,K,UAAAA,E,eAAAA,M,KAKL,IAAMyC,EAAc,SAAC,GAQrB,IAPLC,EAOI,EAPJA,eACAC,EAMI,EANJA,iBACAC,EAKI,EALJA,IAMA,EAAkC9H,oBAAS,GAA3C,mBAAO+H,EAAP,KAAkBC,EAAlB,KACM1H,EAAW2H,sBAEjB,MAAO,CACL3H,WACAyH,YACAG,aAAc,WACZ,IAAMvH,EAAQL,EAASM,QACnBD,IACFA,EAAMxB,MAAQ,GACd6I,GAAa,GACbrH,EAAMwH,UAGVC,aAAa,WAAD,4BAAE,WACZhG,GADY,qBAAA7I,EAAA,yDAKPwO,EALO,oDAONM,EACJjG,EAAMC,cAAcgG,OACnBjG,EAAMkG,cAAgBlG,EAAMkG,aAAaD,MAThC,uBAWVL,GAAa,GAXH,6BAeN5P,EAAOiQ,EAAM,GACfP,IAAQ5C,EAAYc,MAhBZ,kCAiBWuC,GAAYnQ,GAjBvB,QAiBJO,EAjBI,OAkBNkP,GAAkBA,EAAiBlP,GAlB7B,2BAmBDmP,IAAQ5C,EAAYsD,IAnBnB,kCAoBWC,GAAUrQ,GApBrB,QAoBJO,EApBI,OAqBNiP,GAAgBA,EAAejP,GArBzB,QAwBZqP,GAAa,GAxBD,4CAAF,mDAAC,KA6BV,SAAeO,GAAtB,mC,8CAAO,WAA2BnQ,GAA3B,mCAAAmB,EAAA,6DAAuCgE,EAAvC,+BAAoDmL,IAAKC,KAAzD,kBAEetP,EAAcjB,GAF7B,cAEGa,EAFH,gBAGeJ,EAAYI,GAH3B,cAGGH,EAHH,OAIKqC,EAAkBrC,EAAlBqC,MAAOC,EAAWtC,EAAXsC,OAJZ,kBAMI,CACLmC,KACAvC,KAAMsB,EAAgB0J,MACtB7K,QACAC,SACAH,EAAG,EACHC,EAAG,EACHpC,MACAV,SAdC,wCAiBHgC,QAAQC,IAAI,uBAAZ,MACM,IAAI+I,MAAM,wBAlBb,2D,sBAsBA,SAAeqF,GAAtB,mC,8CAAO,WAAyBrQ,GAAzB,eAAAmB,EAAA,+EAEeD,EAAUlB,GAFzB,cAEGwQ,EAFH,yBAGI,CACLxQ,OACAb,KAAMa,EAAKb,KACXsR,MAAOhL,MAAM+K,EAAIE,UACd/K,KAAK,GACLvD,KAAI,SAACuO,EAAG9L,GAAJ,OAAc2L,EAAII,QAAQ/L,EAAQ,QARxC,sCAWH7C,QAAQC,IAAI,qBAAZ,MACM,IAAI+I,MAAM,sBAZb,0D,sBC3DA,IAAM6F,GAAY,SAAC,GAKV,IAHZzJ,EAGW,EAHXA,SACAkC,EAEW,EAFXA,QACAlD,EACW,EADXA,MAGF,OACE,yBACEkD,QAASA,EACTlD,MAAK,aACHO,OAAQ,SACRmK,MAAO,QACJ1K,IAGJgB,ICtBM2J,GAAiB,SAAC,GAMjB,IAJVjM,EAIS,EAJTA,WACAwE,EAGS,EAHTA,QAGS,IAFTmD,aAES,MAFD,EAEC,MADTmC,OAiBF,IAAMxI,OAhBK,SAgBW,CACpBuD,YAAa,UACbC,YAAa,SACX,GAEJ,OACE,kBAAC,GAAD,CACEN,QAASA,EACTlD,MAAOA,GAEP,kBAAC,EAAD,iBAzBJ,SAAwBtB,GACtB,MAA0BsH,EACxBtH,EAAW/B,MACX+B,EAAW9B,OAXM,IASXD,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAKf,OAAO,2BACF8B,GADL,IAEEjC,EAAGiC,EAAWjC,EAAI4J,EAClB3J,EAAGgC,EAAWhC,EAAI2J,EAClB1J,MAAOA,EAAQ0J,EACfzJ,OAAQA,EAASyJ,IAeXoB,CAAe/I,GADrB,CAEEsB,MAAO,CACLQ,OAAQ,gB,SCtCZoK,GAAYC,aAAa,QAAS,GAAI,CAC1CC,QAD0C,SAClCC,EAAIC,EAAYC,EAAYC,GAClCH,EAAGI,kBAhBmB,cAiBtBJ,EAAGI,kBAhBiB,SAkBtBC,QAL0C,aAQ1CC,SAR0C,aAW1CC,WAX0C,e,8CAgBrC,WAA6B3K,EAAakF,GAA1C,eAAA9K,EAAA,sEACY6P,GADZ,cACCG,EADD,gBAEQA,EAAGQ,IAhCQ,aAgCe5K,EAAOkF,GAFzC,oF,sBAKA,SAAe2F,KAAtB,gC,8CAAO,8BAAAzQ,EAAA,sEACY6P,GADZ,cACCG,EADD,gBAEcA,EAAGU,WArCE,cAmCnB,cAECC,EAFD,gBAGQ7R,QAAQ0D,IACnBmO,EAAK1P,IAAL,uCAAS,WAAM6J,GAAN,eAAA9K,EAAA,sEACYgQ,EAAGY,IAxCF,aAwCyB9F,GADtC,cACDjM,EADC,gBAEMmQ,GAAYnQ,EAAOiM,GAFzB,mFAAT,wDAJG,oF,sBAWA,SAAe+F,KAAtB,gC,8CAAO,8BAAA7Q,EAAA,sEACY6P,GADZ,cACCG,EADD,OAECG,EAAcH,EAAGG,YAAY,CAhDX,cAgDgC,aAFnD,SAGCA,EAAYW,YAjDM,cAiDyBC,QAH5C,4C,sBCzCA,ICRMC,GAAiB,WAQ5B,IAPA,IAAMC,EAAmB,GAOhBvP,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACrBsP,EAAIC,KAAK,CACPrP,OAPS,GAQTD,MATQ,GAURF,EARU,IAFF,GAUaA,EACrBC,EARU,IAFD,GAUaA,EACtBqC,GAAG,GAAD,OAAKtC,EAAL,YAAUC,KAIlB,OAAOsP,GCUIE,GAAgB,SAAC,GAMd,IAJZhJ,EAIW,EAJXA,QACAlC,EAGW,EAHXA,SAKIhB,GAFO,EAFXqG,MAEW,EADXmC,OAGmC,CACnChF,YAAa,QACbD,YAAa,WACX,IACJ,OACE,kBAAC,GAAD,KACE,kBAAC4I,EAAA,EAAD,CACEnM,MAAK,aACHrD,MAAO,OACPC,OAAQ,QACLoD,GAELkD,QAASA,GACRlC,K,4BChDIoL,GAAehH,IAAMC,cAA4B,CAC5DmD,QAAQ,EACR6D,eAAgB,CAAE5P,EAAG,EAAGC,EAAG,GAC3B4P,kBAAmB,CAAE1P,OAAQ,EAAGD,MAAO,GACvC4P,cAAe,CAAExJ,KAAM,EAAGC,IAAK,GAC/BwJ,eAAgB,CAAE5P,OAAQ,EAAGD,MAAO,GACpC8P,aAAc,CAAEhQ,EAAG,EAAGC,EAAG,GACzBgQ,aAASpF,EACTqF,cAR4D,aAU5DC,gBAAiB,CAAEnQ,EAAG,EAAGC,EAAG,GAC5BmQ,mBAAoB,CAAEpQ,EAAG,EAAGC,EAAG,K,qECGpBoQ,GAAY,SAAC,GAQc,IANpC9L,EAMmC,EANnCA,SACAkC,EAKmC,EALnCA,QACA6J,EAImC,EAJnCA,iBACAC,EAGmC,EAHnCA,cAGmC,IAFnC3G,aAEmC,MAF5B,EAE4B,EADhCzC,EACgC,mBA0BrC,OAAO,yBACLV,QA1BkB,WAClB,GAAIU,EAAMgJ,gBAAV,CACA,MAAehJ,EAAMgJ,gBAAfnQ,EAAN,EAAMA,EAAGC,EAAT,EAASA,EACT,GAAIqQ,GAAoBC,EAAe,CAGrC,IAAIpH,EVLH,SACLnJ,EACAC,EACAiJ,GAEA,IAAMsH,EAAStH,EAAWA,EAAWzF,OAAS,GACxC8L,EAAMrG,EACT7G,QACC,SAACrB,GAAD,OACEA,EAAEhB,EAAIA,GACNA,EAAIwQ,EAAOxQ,EAAIwQ,EAAOtQ,OACtBc,EAAEf,EAAIA,GACNA,EAAIuQ,EAAOvQ,EAAIuQ,EAAOrQ,UAEzBsQ,MAAK,SAACC,GAAD,OAAQA,EAAG1Q,EAAIA,GAAK0Q,EAAGzQ,EAAIA,MACnC,OAAIsP,GAAOA,EAAI9L,OAAe8L,EAAI,GAC3B,KUXYoB,CAFf3Q,GAAM4J,EACN3J,GAAM2J,EAC8B0F,MACpC,GAAGnG,EAAU,CACX,IAAMlH,EAAa8H,EAAqBuG,EAAkBnH,GAC1DoH,EAAc,2BACTtO,GADQ,IAEXK,GAAImL,IAAKC,aAGX6C,EAAc,2BACTD,GADQ,IAEXtQ,IACAC,IACAqC,GAAImL,IAAKC,QAIZjH,GACDA,EAAQU,EAAMgJ,gBAAgBnQ,EAAGmH,EAAMgJ,gBAAgBlQ,MAKzD,kBAAC0P,GAAaiB,SAAd,CAAuB1M,MAAOiD,GAC3B5C,KC7CMsM,GAAO,SAAC,GAAyD,IAAvDrR,EAAsD,EAAtDA,KAAMsR,EAAgD,EAAhDA,WAAYC,EAAoC,EAApCA,cAAoC,IAArBnH,aAAqB,MAAf,EAAe,EACrEoH,EAAYC,iBAA0B,MAC5C,EAA0BlM,oBAAmB,OAAV+L,QAAU,IAAVA,OAAA,EAAAA,EAAY5Q,QAAS,GAAxD,mBAAOA,EAAP,KAAcgR,EAAd,KACA,EAA4BnM,oBAAmB,OAAV+L,QAAU,IAAVA,OAAA,EAAAA,EAAY3Q,SAAU,GAA3D,mBAAOA,EAAP,KAAegR,EAAf,KA+BA,OA7BA1L,qBAAU,WAAM,4CAEd,oCAAAnH,EAAA,sEACsBkB,EADtB,UACQ4R,EADR,OAEQC,EAASL,EAAUrL,SACrByL,EAHN,oBAIUE,EAJV,OAIoBD,QAJpB,IAIoBA,OAJpB,EAIoBA,EAAQE,WAAW,MAC7BC,EAAWJ,EAAMK,YAAY,CAAE7H,UAErCsH,EAASM,EAAStR,OAClBiR,EAAUK,EAASrR,SAEfmR,EAVR,kCAWYF,EAAMM,OAAO,CACjBC,cAAa,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAQE,WAAW,MAClCC,aACC9S,QAdT,QAgBYkT,EAAgB,CACpB1R,MAAOsR,EAAStR,MAChBC,OAAQqR,EAASrR,QAGhB4Q,GAAeA,EAAca,GArBtC,6CAFc,0DACdC,KA0BC,CAACrS,EAAMuR,IAGR,6BACE,4BAAQ9N,IAAK+N,EAAW9Q,MAAOA,EAAOC,OAAQA,MCjCvC2R,GAAa,SAAC,GAKtB,IAHDvN,EAGA,EAHAA,SACAhB,EAEA,EAFAA,MAGIN,EAAM+J,sBAEZ,OAAO,kBAACtE,EAAckI,SAAf,CAAwB1M,MAAOjB,GACpC,yBACEA,IAAKA,EACL8O,UAAU,kBACVxO,MAAK,aACHyO,UAAW,SACXC,UAAW,SACX9R,OAAQ,QACLoD,IAGJgB,KC0LQ2N,GAlMW,WACxB,MAA4BnN,mBAAS,MAArC,mBAAQ6E,EAAR,KACA,GADA,KACkD7E,sBAAlD,mBAAQuL,EAAR,KAA0B6B,EAA1B,KACA,ExBjBoB,WACpB,MAAwBpN,mBAAS,IAAjC,mBAAOzI,EAAP,KAAa8V,EAAb,KACA,EAAkCrN,oBAAU,GAA5C,mBAAOtF,EAAP,KAAkB4S,EAAlB,KACA,EAAoCtN,qBAApC,mBAAO+L,EAAP,KAAmBC,EAAnB,KACA,EAAwBhM,qBAAxB,mBAAO5H,EAAP,KAAamV,EAAb,KACA,EAA0BvN,mBAAc,IAAxC,mBAAO6I,EAAP,KAAc2E,EAAd,KACA,EAAsCxN,oBAAS,GAA/C,mBAAOyN,EAAP,KAAoBC,EAApB,KACA,EAAsC1N,oBAAS,GAA/C,mBAAO2N,EAAP,KAAoBC,EAApB,KACA,EAAoC5N,oBAAS,GAA7C,mBAAO6N,EAAP,KAAmBC,EAAnB,KACA,EAAgC9N,oBAAS,GAAzC,mBAAO+N,EAAP,KAAiBC,EAAjB,KACMC,EAAuBC,sBAAYlC,EAAe,CAACA,IAEzD,MAAO,CACLyB,cACAE,cACAE,aACAE,WACAI,YAAatF,EAAMnO,GACnBqR,aACAC,cAAeiC,EACf1W,OACA8V,UACA3S,YACA4S,eACAlV,OACAmV,UACA1E,QACAuF,SAAU,WACR,IAAMC,EAAe3T,EAAY,EACjC4S,EAAa5S,EAAY,GACzBkT,EAAgC,IAAjBS,GACfP,EAAcO,IAAiBxF,EAAMnK,OAAS,IAEhD4P,QAAQ,WAAD,4BAAE,WAAOtR,GAAP,SAAAzD,EAAA,0DACHwU,GAAa3V,EADV,wDAGP4V,GAAY,GAHL,kBAMCpU,EAAKxB,EAAM4E,EAAazF,GANzB,uDAQL6C,QAAQC,IAAR,MARK,yBAUL2T,GAAY,GAVP,4EAAF,mDAAC,GAaRO,OAAQ,YAAyC,IAAtChX,EAAqC,EAArCA,KAAMa,EAA+B,EAA/BA,KAAaoW,EAAkB,EAAzB3F,MACf4F,EAAQD,EAAO9P,OAAS,EAC9B2O,EAAQ9V,GACRgW,EAAQnV,GACRoV,EAASgB,GACTlB,EAAa,GACbI,EAAee,GACfb,GAAe,GACfE,EAAgC,IAAlBU,EAAO9P,SAEvBgQ,aAAc,WACZ,IAAML,EAAe3T,EAAY,EACjC4S,EAAae,GACbT,EAAgC,IAAjBS,GACfP,EAAcO,IAAiBxF,EAAMnK,OAAS,KwB3CiHiQ,GAA3JvW,EAAR,EAAQA,KAAMmW,EAAd,EAAcA,OAAQ7T,EAAtB,EAAsBA,UAAW+S,EAAjC,EAAiCA,YAAaE,EAA9C,EAA8CA,YAAaE,EAA3D,EAA2DA,WAAYM,EAAvE,EAAuEA,YAAuBG,GAA9F,EAAoFP,SAApF,EAA8FO,SAASI,EAAvG,EAAuGA,aAAcN,EAArH,EAAqHA,SAAUpC,EAA/H,EAA+HA,cAAqBD,GAApJ,EAA8IxU,KAA9I,EAAoJwU,YACpJ,EPnBuB,WACvB,MAA0C/L,mBAAuB,IAAjE,mBAAO4O,EAAP,KAAsBC,EAAtB,KACA,EAAwB7O,oBAAS,GAAjC,mBAAO8O,EAAP,KAAaC,EAAb,KAEArO,qBAAU,WAAM,4CACd,4BAAAnH,EAAA,sEACuByQ,KADvB,OACQgF,EADR,OAEEH,EAAiBG,GAFnB,4CADc,uBAAC,WAAD,gCAKdC,GAAOC,SACN,CAACJ,IAEJ,IAAMK,EAAU,kBAAMJ,GAASD,IAE/B,MAAO,CACLF,cAAeA,EACfO,UACAC,gBAAgB,WAAD,4BAAE,sBAAA7V,EAAA,sEACT6Q,KADS,OAEf+E,IAFe,2CAAF,kDAAC,IOEiDE,GAA3DT,EAAR,EAAQA,cAAeQ,EAAvB,EAAuBA,gBAA0BE,EAAjD,EAAwCH,QACxC,EvB6E4B,WAC5B,MAA0BI,qBAAW5S,EAASH,GAA9C,mBAAOI,EAAP,KAAc4S,EAAd,KACQ/S,EAAwCG,EAAxCH,mBAER,MAAO,CACLC,gBAH8CE,EAApBF,gBAI1BD,qBACA+O,cAAe,SAACiE,GAAD,OACbD,EAAS,CAAExU,KAAMmB,EAAWW,eAAgBI,WAAYuS,KAC1DC,iBAAkB,SAAC5R,GAAD,OAChB0R,EAAS,CAAExU,KAAMmB,EAAWyB,MAAOE,mBACrC6R,kBAAmB,SAACpS,GAAD,OACjBiS,EAAS,CAAExU,KAAMmB,EAAWgB,kBAAmBI,QACjDqS,kBAAmB,SAACrS,EAAYL,GAAb,OACjBsS,EAAS,CACPxU,KAAMmB,EAAWqB,kBACjBD,KACAL,gBAEJoQ,aAAcY,uBACZ,SAACjR,GAAD,OACEuS,EAAS,CAAExU,KAAMmB,EAAWwB,kBAAmBjD,UAAWuC,MAC5D,CAACuS,KuBnGgIK,GAA7HrE,EAAR,EAAQA,cAAe/O,EAAvB,EAAuBA,mBAAoBC,EAA3C,EAA2CA,gBAAiBgT,EAA5D,EAA4DA,iBAAkBE,EAA9E,EAA8EA,kBAAmBD,EAAjG,EAAiGA,kBAAmBrC,EAApH,EAAoHA,aAC9GwC,IAAgB1X,EAEtB,GAAuFuP,EAAY,CACjGG,IAAK5C,EAAYsD,IACjBZ,eAAgB,SAACmI,GACfxB,EAAOwB,GACP,IAAMjS,EAAgBiS,EAASlH,MAAMnK,OACrCgR,EAAiB5R,MALHkS,GAAlB,GAAQ1P,SAAgC2P,GAAxC,GAA0B/H,aAA6CgI,GAAvE,GAAyD9H,aASzD,GAAyFT,EAAY,CACnGG,IAAK5C,EAAYc,MACjB6B,iBAAkB,SAAC3K,IRThB,SAAP,sCQUQiT,CAAcjT,EAAW9E,KAAM8E,EAAWK,IAAI2R,MAAK,kBAAII,OACvDlC,EAAoBlQ,MAJRkT,GAAlB,GAAQ9P,SAAgC+P,GAAxC,GAA0BnI,aAA+CoI,GAAzE,GAA2DlI,aAQ3D1H,qBAAU,kBAAM4M,EAAa5S,KAAY,CAACA,EAAW4S,IAErD,IAkBMiD,GACJhF,EAAkB,oEAAmB,gFAEjCiF,GACJ,oCACE,2BACEtS,IAAK8R,GACLhV,KAAK,OACLyV,OAAO,kBACP9R,SAAUuR,GACV1R,MAAO,CAAEkS,QAAS,UAEpB,2BACExS,IAAKkS,GACLpV,KAAK,OACLyV,OAAO,UACPjS,MAAO,CAAEkS,QAAS,QAClB/R,SAAU2R,MAKZK,GAAqB,GACrBlD,IAAeE,IACjBgD,GAAoB,CAClBzO,WAAW,WAIf,IAAI0O,GAAe,GAOjB,OANEnD,IAAeI,IACjB+C,GAAc,CACZ1O,WAAW,WAKb,yBAAK8K,UAAU,OACZwD,GAED,kBAACK,EAAA,EAAD,CAAWC,OAAK,IACZhB,GAAgB,oCAClB,kBAACiB,EAAA,EAAD,CAAK/D,UAAU,kCACb,6BACE,kEACA,kBAACrC,EAAA,EAAD,CAAQjJ,QAASuO,IAAiB,kBAAC,IAAD,MAAlC,cAIJ,kBAACc,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACNnB,GACC,yBAAK9C,UAAU,cAAcxO,MAAO,CAClC0O,UAAW,SACX9R,OAAQ,UAEV,wDACA,2BACGmV,GACD,kBAAC5F,EAAA,EAAD,CAAQuG,QAAQ,OAAOxP,QAAS0N,GAAhC,6BAEF,kBAAC,GAAD,CACEpI,QAAwB,OAAhBuE,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBvQ,QAASsB,EAAgBuJ,KACnDhB,MAAOA,EACPnD,QAlFK,WACjB,IAAMyP,EAAoC,CACxC5T,GAAImL,IAAKC,KACT3N,KAAMsB,EAAgBuJ,KACtB5K,EAAG,EACHC,EAAG,EACHC,MAAO,IACPC,OAAQ,GACRK,SAAU,GACVzD,WAAY,IACZ0D,WAAY,cACZF,KAAM,mBAER4R,EAAoB+D,KAkEV,4BAMCvC,EACEtR,QAAO,SAAAJ,GAAU,OAAEA,EAAWlC,OAASsB,EAAgB0J,SACvDxL,KAAI,SAAA0C,GAEH,OADA9C,QAAQC,IAAR,OAAYkR,QAAZ,IAAYA,OAAZ,EAAYA,EAAkBhO,IACvB,yBAAKA,GAAIL,EAAWK,IAAI,kBAAC,GAAD,CAC7B8G,IAAKnH,EAAWK,GAChByJ,QAAwB,OAAhBuE,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBhO,MAAOL,EAAWK,GAC5CmE,QAAS,WACP0L,EAAoBlQ,IAEtBA,WAAYA,EACZ2H,MAAOA,QAIb,kBAAC,GAAD,CAAeA,MAAOA,EAAOnD,QAAS2O,IAAtC,8BAKJ,kBAACW,EAAA,EAAD,CAAKC,GAAI,EAAGjE,UAAU,qBACpB,yBAAKA,UAAU,oDAAoDxO,MAAO,CACxEpD,OAAQ,MACRgW,UAAW,SAEX,6BACE,kBAACzG,EAAA,EAAD,CAAQnM,MAAOmS,GAAqB3D,UAAU,iBAAiBkE,QAAQ,eAAexP,QAASgN,GAAc,kBAAC,IAAD,QAE/G,6BACGoB,GAAgB,kBAACuB,EAAA,EAAD,CAAKrE,UAAU,0BAC9B,kBAACqE,EAAA,EAAIC,KAAL,CAAU5P,QAASuO,IAAiB,kBAAC,IAAD,MAApC,eACA,kBAACoB,EAAA,EAAIC,KAAL,CAAU5P,QApGP,kBAAM4M,EAAQ7R,KAoGc,kBAAC,IAAD,MAA/B,YAIJ,6BACE,kBAACkO,EAAA,EAAD,CAAQnM,MAAOoS,GAAe5D,UAAU,iBAAiBkE,QAAQ,eAAexP,QAAS0M,GAAU,kBAAC,IAAD,SAGvG,kBAAC,GAAD,KACED,GACA,kBAAC,KAAD,CACEoD,sBAAsB,EACtBC,YAAajG,OAAmBzF,EAAY,WAE5C,kBAAC,GAAD,CACEyF,iBAAkBA,EAClBC,cAAeA,EACf3G,MAAOA,GAEP,kBAAC4M,EAAA,EAAD,CACEjT,MAAO,CACLkS,QAAS,UAGX,kBAAC,GAAD,CACE3E,WAAYA,EACZC,cAAeA,EACfvR,KAAM0T,EACNtJ,MAAOA,IAEPkH,GACA,kBAAC,EAAD,CACE1G,iBAAkBsK,EAClBrK,iBAAkBsK,EAClBxK,eAAgB2G,EAChB/O,YAAaN,EACbyH,WAAYoG,KACZ1F,MAAOA,aC/LX6M,QACW,cAA7BxY,OAAOyY,SAASC,UAEe,UAA7B1Y,OAAOyY,SAASC,UAEhB1Y,OAAOyY,SAASC,SAASC,MACvB,2D5BUJva,EAAQ0E,SAAQ,YAAoB,IAAjBzE,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IACvBC,EAAOF,GAAQ,IAAIc,SAAQ,SAACC,EAASC,GACnC,IAAMuZ,EAAS/Q,SAASgR,cAAc,UACtCD,EAAOta,IAAMA,EACbsa,EAAOpZ,OAAS,WACdJ,EAAQY,OAAO3B,IACf6C,QAAQC,IAAR,UAAe9C,EAAf,iBAEFua,EAAOlZ,QAAU,kBACfL,EAAO,cAAD,OAAehB,EAAf,6BACRwJ,SAAS2G,KAAKsK,YAAYF,S6B7BhCG,IAAStF,OACP,kBAAC,IAAMuF,WAAP,KACE,kBAAC,GAAD,OAEFnR,SAASoR,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpD,MAAK,SAACqD,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNtY,QAAQsY,MAAMA,EAAMnC,c","file":"static/js/main.2fdc5ae4.chunk.js","sourcesContent":["type ScriptName = 'pdfjsLib' | 'PDFLib' | 'download' | 'w3Color';\n\ninterface Script {\n  name: ScriptName;\n  src: string;\n}\n\nconst scripts: Script[] = [\n  {\n    name: 'pdfjsLib',\n    src: 'https://unpkg.com/pdfjs-dist@2.3.200/build/pdf.min.js',\n  },\n  {\n    name: 'PDFLib',\n    src: 'https://unpkg.com/pdf-lib@1.4.0/dist/pdf-lib.min.js',\n  },\n  {\n    name: 'download',\n    src: 'https://unpkg.com/downloadjs@1.4.7',\n  },\n  { name: 'w3Color', src: 'https://www.w3schools.com/lib/w3color.js' },\n];\n\nconst assets: Record<string, any> = {};\nexport const getAsset = (scriptName: string) => assets[scriptName];\n\nexport const prepareAssets = (): void => {\n  // prepare scripts\n  scripts.forEach(({ name, src }) => {\n    assets[name] = new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      script.src = src;\n      script.onload = () => {\n        resolve(window[name as any]);\n        console.log(`${name} is loaded.`);\n      };\n      script.onerror = () =>\n        reject(`The script ${name} didn't load correctly.`);\n      document.body.appendChild(script);\n    });\n  });\n};\n\ninterface Font {\n  src?: string;\n  correction?: (size: number, lineHeight: number) => number;\n  [key: string]: any;\n}\n\ninterface FontsType {\n  [key: string]: Font;\n}\n\nconst fonts: FontsType = {\n  Courier: {\n    correction(size: number, lineHeight: number) {\n      return (size * lineHeight - size) / 2 + size / 6;\n    },\n  },\n  Helvetica: {\n    correction(size: number, lineHeight: number) {\n      return (size * lineHeight - size) / 2 + size / 10;\n    },\n  },\n  'Times-Roman': {\n    correction(size: number, lineHeight: number) {\n      return (size * lineHeight - size) / 2 + size / 7;\n    },\n  },\n};\n\n// Available fonts\nexport const Fonts = {\n  ...fonts,\n  標楷體: {\n    src: '/CK.ttf', // 9.9 MB\n    correction(size: number, lineHeight: number) {\n      return (size * lineHeight - size) / 2;\n    },\n  },\n};\n\nexport const fetchFont = (name: string) => {\n  if (fonts[name as any]) return fonts[name as any];\n\n  const font = Fonts[name as keyof typeof Fonts];\n  if (!font) throw new Error(`Font '${name}' not exists.`);\n\n  fonts[name] = fetch(font.src)\n    .then((r) => r.arrayBuffer())\n    .then((fontBuffer) => {\n      const fontFace = new (window as any).FontFace(name, fontBuffer);\n      fontFace.display = 'swap';\n      fontFace.load().then(() => (document as any).fonts.add(fontFace));\n      return {\n        ...font,\n        buffer: fontBuffer,\n      };\n    });\n};\n","import { getAsset } from './prepareAssets';\n\nexport const readAsArrayBuffer = (\n  file: File\n): Promise<string | ArrayBuffer | null> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = reject;\n    reader.readAsArrayBuffer(file);\n  });\n};\n\nexport const readAsImage = (src: Blob | string): Promise<HTMLImageElement> => {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => resolve(img);\n    img.onerror = reject;\n    if (src instanceof Blob) {\n      const url = window.URL.createObjectURL(src);\n      img.src = url;\n    } else {\n      img.src = src;\n    }\n  });\n};\n\nexport const readAsDataURL = (\n  file: File\n): Promise<string | ArrayBuffer | null> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = reject;\n    reader.readAsDataURL(file);\n  });\n};\n\ninterface PDF {\n  numPages: number;\n  getPage: (index: number) => Promise<any>;\n}\nexport const readAsPDF = async (file: File): Promise<PDF> => {\n  const pdfjsLib = await getAsset('pdfjsLib');\n  // Safari possibly get webkitblobresource error 1 when using origin file blob\n  const blob = new Blob([file]);\n  const url = window.URL.createObjectURL(blob);\n  return pdfjsLib.getDocument(url).promise;\n};\n","import { readAsArrayBuffer } from './asyncReader';\nimport { getAsset } from './prepareAssets';\n\nexport async function save(\n  pdfFile: File,\n  objects: Attachments[],\n  name: string\n) {\n  const PDFLib = await getAsset('PDFLib');\n  const download = await getAsset('download');\n  let pdfDoc: {\n    getPages: () => any[];\n    embedFont: (arg0: unknown) => any;\n    embedJpg: (arg0: unknown) => any;\n    embedPng: (arg0: unknown) => any;\n    embedPdf: (arg0: any) => [any] | PromiseLike<[any]>;\n    save: () => any;\n  };\n\n  try {\n    pdfDoc = await PDFLib.PDFDocument.load(await readAsArrayBuffer(pdfFile));\n  } catch (e) {\n    console.log('Failed to load PDF.');\n    throw e;\n  }\n\n  const pagesProcesses = pdfDoc.getPages().map(async (page, pageIndex) => {\n    const pageObjects = objects[pageIndex];\n    // 'y' starts from bottom in PDFLib, use this to calculate y\n    const pageHeight = page.getHeight();\n    const embedProcesses = pageObjects.map(async (object: Attachment) => {\n      if (object.type === 'image') {\n        const { file, x, y, width, height } = object as ImageAttachment;\n        let img: any;\n        try {\n          if (file.type === 'image/jpeg') {\n            img = await pdfDoc.embedJpg(await readAsArrayBuffer(file));\n          } else {\n            img = await pdfDoc.embedPng(await readAsArrayBuffer(file));\n          }\n          return () =>\n            page.drawImage(img, {\n              x,\n              y: pageHeight - y - height,\n              width,\n              height,\n            });\n        } catch (e) {\n          console.log('Failed to embed image.', e);\n          throw e;\n        }\n      } else if (object.type === 'text') {\n        const { x, y, text, lineHeight, fontSize, fontFamily, width } =\n          object as TextAttachment;\n        const pdfFont = await pdfDoc.embedFont(fontFamily);\n        return () =>\n          page.drawText(text, {\n            // maxWidth: width,\n            font: pdfFont,\n            size: fontSize,\n            lineHeight,\n            x,\n            y: pageHeight - fontSize! - y,\n          });\n      }\n    });\n    // embed objects in order\n    const drawProcesses: any[] = await Promise.all(embedProcesses);\n    drawProcesses.forEach((p) => p());\n  });\n  await Promise.all(pagesProcesses);\n  try {\n    const pdfBytes = await pdfDoc.save();\n    download(pdfBytes, name, 'application/pdf');\n  } catch (e) {\n    console.log('Failed to save PDF.');\n    throw e;\n  }\n}\n","import { useState, useCallback } from 'react';\nimport { save } from '../utils/pdf';\n\nexport interface Pdf {\n  name: string;\n  file: File;\n  pages: Promise<any>[];\n}\n\nexport const usePdf = () => {\n  const [name, setName] = useState('');\n  const [pageIndex, setPageIndex] = useState(-1);\n  const [dimensions, setDimensions] = useState<Dimensions>();\n  const [file, setFile] = useState<File>();\n  const [pages, setPages] = useState<any>([]);\n  const [isMultiPage, setIsMultiPage] = useState(false);\n  const [isFirstPage, setIsFirstPage] = useState(false);\n  const [isLastPage, setIsLastPage] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const setDimensionsHandler = useCallback(setDimensions, [setDimensions]);\n\n  return {\n    isMultiPage,\n    isFirstPage,\n    isLastPage,\n    isSaving,\n    currentPage: pages[pageIndex],\n    dimensions,\n    setDimensions: setDimensionsHandler,\n    name,\n    setName,\n    pageIndex,\n    setPageIndex,\n    file,\n    setFile,\n    pages,\n    nextPage: () => {\n      const newPageIndex = pageIndex + 1;\n      setPageIndex(pageIndex + 1);\n      setIsFirstPage(newPageIndex === 0);\n      setIsLastPage(newPageIndex === pages.length - 1);\n    },\n    savePdf: async (attachments: Attachments[]) => {\n      if (isSaving || !file) return;\n\n      setIsSaving(true);\n\n      try {\n        await save(file, attachments, name);\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setIsSaving(false);\n      }\n    },\n    setPdf: ({ name, file, pages: _pages }: Pdf) => {\n      const multi = _pages.length > 1;\n      setName(name);\n      setFile(file);\n      setPages(_pages);\n      setPageIndex(0);\n      setIsMultiPage(multi);\n      setIsFirstPage(true);\n      setIsLastPage(_pages.length === 1);\n    },\n    previousPage: () => {\n      const newPageIndex = pageIndex - 1;\n      setPageIndex(newPageIndex);\n      setIsFirstPage(newPageIndex === 0);\n      setIsLastPage(newPageIndex === pages.length - 1);\n    },\n  };\n};\n","import { useReducer, useCallback } from 'react';\n\nenum ActionType {\n  RESET = 'RESET',\n  ADD_ATTACHMENT = 'ADD_ATTACHMENT',\n  REMOVE_ATTACHMENT = 'REMOVE_ATTACHMENT',\n  UPDATE_ATTACHMENT = 'UPDATE_ATTACHMENT',\n  UPDATE_PAGE_INDEX = 'UPDATE_PAGE_INDEX',\n}\n\ninterface State {\n  pageIndex: number;\n  allPageAttachments: Attachments[];\n  pageAttachments: Attachments;\n}\n\ntype Action =\n  | { type: ActionType.UPDATE_PAGE_INDEX; pageIndex: number }\n  | { type: ActionType.ADD_ATTACHMENT; attachment: Attachment }\n  | { type: ActionType.REMOVE_ATTACHMENT; id: string }\n  | {\n      type: ActionType.UPDATE_ATTACHMENT;\n      id: string;\n      attachment: Partial<Attachment>;\n    }\n  | { type: ActionType.RESET; numberOfPages: number };\n\nconst initialState: State = {\n  pageIndex: -1,\n  allPageAttachments: [],\n  pageAttachments: [],\n};\n\nconst reducer = (state: State, action: Action) => {\n  const { pageIndex, allPageAttachments, pageAttachments } = state;\n\n  switch (action.type) {\n    case ActionType.ADD_ATTACHMENT: {\n      const newAllPageAttachmentsAdd = allPageAttachments.map(\n        (attachments, index) =>\n          pageIndex === index\n            ? [...attachments, action.attachment]\n            : attachments\n      );\n\n      return {\n        ...state,\n        allPageAttachments: newAllPageAttachmentsAdd,\n        pageAttachments: newAllPageAttachmentsAdd[pageIndex],\n      };\n    }\n    case ActionType.REMOVE_ATTACHMENT: {\n      const newAllPageAttachmentsRemove = allPageAttachments.map(\n        (otherPageAttachments, index) =>\n          pageIndex === index\n            ? pageAttachments.filter((a) => a.id !== action.id)\n            : otherPageAttachments\n      );\n\n      return {\n        ...state,\n        allPageAttachments: newAllPageAttachmentsRemove,\n        pageAttachments: newAllPageAttachmentsRemove[pageIndex],\n      };\n    }\n    case ActionType.UPDATE_ATTACHMENT: {\n      if (pageIndex === -1) {\n        return state;\n      }\n\n      const newAllPageAttachmentsUpdate = allPageAttachments.map(\n        (otherPageAttachments, index) =>\n          pageIndex === index\n            ? pageAttachments.map((old) =>\n                old.id === action.id ? { ...old, ...action.attachment } : old\n              )\n            : otherPageAttachments\n      );\n\n      return {\n        ...state,\n        allPageAttachments: newAllPageAttachmentsUpdate,\n        pageAttachments: newAllPageAttachmentsUpdate[pageIndex],\n      };\n    }\n    case ActionType.UPDATE_PAGE_INDEX: {\n      return {\n        ...state,\n        pageIndex: action.pageIndex,\n        pageAttachments: allPageAttachments[action.pageIndex],\n      };\n    }\n    case ActionType.RESET: {\n      return {\n        pageIndex: 0,\n        pageAttachments: [],\n        allPageAttachments: Array(action.numberOfPages).fill([]),\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const useAttachments = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { allPageAttachments, pageAttachments } = state;\n\n  return {\n    pageAttachments,\n    allPageAttachments,\n    addAttachment: (newAttachment: Attachment) =>\n      dispatch({ type: ActionType.ADD_ATTACHMENT, attachment: newAttachment }),\n    resetAttachments: (numberOfPages: number) =>\n      dispatch({ type: ActionType.RESET, numberOfPages }),\n    removeAttachments: (id: string) =>\n      dispatch({ type: ActionType.REMOVE_ATTACHMENT, id }),\n    updateAttachments: (id: string, attachment: Partial<Attachment>) =>\n      dispatch({\n        type: ActionType.UPDATE_ATTACHMENT,\n        id,\n        attachment,\n      }),\n    setPageIndex: useCallback(\n      (index: number) =>\n        dispatch({ type: ActionType.UPDATE_PAGE_INDEX, pageIndex: index }),\n      [dispatch]\n    ),\n  };\n};\n","export enum DragActions {\n  MOVE = 'MOVE',\n  SCALE = 'SCALE',\n  NO_MOVEMENT = 'NO_MOVEMENT',\n}\n\nexport enum Color {\n  RED = 'red',\n  ORANGE = 'orange',\n  YELLOW = 'yellow',\n  OLIVE = 'olive',\n  GREEN = 'green',\n  TEAL = 'teal',\n  BLUE = 'blue',\n  VIOLOET = 'violet',\n  PURPLE = 'purple',\n  BROWN = 'brown',\n  GREY = 'grey',\n  BLACK = 'black',\n}\n\nexport enum AttachmentTypes {\n  IMAGE = 'image',\n  TEXT = 'text',\n}\n\nexport enum TextMode {\n  INSERT = 'insert',\n  COMMAND = 'command',\n}\n","import React, { CSSProperties, FocusEventHandler, forwardRef } from 'react';\nimport classNames from 'classnames';\nimport type {DraggableSyntheticListeners, Translate} from '@dnd-kit/core';\n\ninterface Props {\n  listeners?: DraggableSyntheticListeners;\n  draggableAttrs?: object;\n  text?: string;\n  editing?: boolean;\n  onBlur?: FocusEventHandler<HTMLInputElement>;\n  onChangeText?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  fontSize?: number;\n  lineHeight?: number;\n  fontFamily?: string;\n  style?: CSSProperties;\n}\n\nconst MIN_WIDTH = 5;\nexport const Text = forwardRef<HTMLInputElement, Props>((\n    {\n      listeners,\n      draggableAttrs,\n      onBlur,\n      onChangeText,\n      editing = false,\n      text,\n      fontSize,\n      lineHeight,\n      fontFamily,\n      style,\n    },\n    ref\n  )=> {\n  const dragAttrs = {\n    ...listeners,\n    ...draggableAttrs,\n  }\n\n  const size = (text?.length || 0) < MIN_WIDTH ? MIN_WIDTH : text?.length\n  return (\n        <input\n          type=\"text\"\n          onBlur={onBlur}\n          ref={ref}\n          onChange={onChangeText}\n          readOnly={!editing}\n          style={{\n            fontSize,\n            lineHeight,\n            fontFamily,\n            outline: 'none',\n            padding: 0,\n            margin: 0,\n            cursor: editing ? 'text': 'move' ,\n            border: 'unset',\n            backgroundColor: 'unset',\n            ...style,\n          }}\n          value={text}\n          size={size}\n          {...(editing? {} : dragAttrs)}\n        />\n    );\n  }\n);\n\n","import React, { useState, useEffect, useRef, CSSProperties, ReactNode } from 'react';\n\ninterface Position {\n  left?: number;\n  top?: number;\n  right?: number;\n  bottom?: number;\n}\n\ninterface Props {\n  position: Position\n  style?: CSSProperties\n  translateX: string;\n  translateY: string;\n  children?: ReactNode | null;\n}\n\nexport const Stone = (\n  {\n    style,\n    translateX,\n    translateY,\n    position,\n    children,\n} : Props) => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        ...position,\n        width: '3rem',\n        height: '3rem',\n        margin: 'auto',\n        borderRadius: '9999px',\n        transform: `translateX(${translateX}) translateY(${translateY}) rotate(0) skewX(0) skewY(0) scaleX(0.25) scaleY(0.25)`,\n        ...style,\n      }}>\n      {children}\n    </div>\n  );\n};\n","import React, { useState, useRef, useEffect, createRef, CSSProperties } from 'react';\nimport { DragActions, TextMode } from '../entities';\nimport { DraggableData, DraggableEvent, DraggableEventHandler } from 'react-draggable';\nimport { Rnd } from 'react-rnd';\nimport { Translate, useDraggable } from '@dnd-kit/core';\nimport { Text } from '../components/Text';\nimport { Stone } from '../components/Stone';\nimport { BsFillCheckCircleFill, BsPencil, BsXCircleFill } from 'react-icons/all';\n\ninterface Props {\n  pageWidth: number;\n  pageHeight: number;\n  removeText?: () => void;\n  updateTextAttachment?: (textObject: Partial<TextAttachment>) => void;\n  fontSize?: number,\n  lineHeight?: number,\n  fontFamily?: string,\n  hidden?: boolean,\n  x:number;\n  y:number;\n}\n\nexport const DraggableText = (\n  {\n    id,\n   text,\n   pageHeight,\n   pageWidth,\n   removeText,\n   updateTextAttachment,\n    fontSize,\n    lineHeight,\n    fontFamily,\n    hidden = false,\n    x,\n    y,\n}: TextAttachment & Props) => {\n  const [content, setContent] = useState(text || '');\n  const [editing, setEditing] = useState(false);\n\n  const {attributes: draggableAttrs, node: inputRef, isDragging, listeners, setNodeRef} = useDraggable({\n    id,\n  });\n\n  useEffect(()=>{\n    if(editing){\n      const input = inputRef.current;\n      if (input) {\n        input.focus();\n        (input as HTMLInputElement).select();\n      }\n    }else{\n      document.getSelection()?.removeAllRanges();\n      if(content === '' && removeText){\n        removeText()\n      }else if(updateTextAttachment){\n        const lines = [content];\n        updateTextAttachment({\n          lines,\n          text: content,\n        });\n      }\n    }\n  },[editing])\n\n  const onChangeText = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value;\n    setContent(value);\n  };\n\n  function handleEdit(e:React.MouseEvent){\n    e.stopPropagation()\n    setEditing(true)\n  }\n\n  function handleOk (e:React.FocusEvent | React.MouseEvent){\n    e.stopPropagation()\n    setEditing(false)\n  }\n\n  function handleRemoveText(e:React.MouseEvent){\n    if(removeText){\n      e.stopPropagation()\n      removeText();\n    }\n  }\n\n  function handleClick(e: React.MouseEvent){\n    e.stopPropagation()\n  }\n\n  const okButton =\n    <Stone\n      position={{\n        left: 0,\n        top: 0,\n        right: 0,\n      }}\n      translateX={\"0\"}\n      translateY={\"-50%\"}\n      style={{\n        backgroundColor: 'white',\n      }}\n    >\n      <BsFillCheckCircleFill\n        onClick={handleOk}\n        style={{\n          cursor: 'pointer',\n          color: '#1eb99d',\n          width: \"100%\",\n          height: \"100%\",\n        }}/>\n    </Stone>\n\n  const deleteButton =\n    <Stone\n      position={{\n        left: 0,\n        top: 0,\n        right: 0,\n      }}\n      translateX={\"0\"}\n      translateY={\"-50%\"}\n      style={{\n        backgroundColor: 'white',\n      }}\n    >\n      <BsXCircleFill\n        onClick={handleRemoveText}\n        style={{\n          cursor: 'pointer',\n          color:'rgb(245, 101, 101)',\n          width: \"100%\",\n          height: \"100%\",\n        }}/>\n    </Stone>\n\n  let textStyle: CSSProperties = {\n    borderWidth: '0.3px',\n    borderColor: 'gray',\n    borderStyle: editing? 'solid': 'dashed',\n  }\n\n  const hiddenStyle: CSSProperties = hidden\n    ? {visibility: 'hidden',}\n    : {}\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        'left': `${x ?? 0}px`,\n        'top': `${y ?? 0}px`,\n        ...hiddenStyle\n      }}\n      onDoubleClick={handleEdit}\n      onClick={handleClick}\n      id={id}\n    >\n      {editing ? okButton : deleteButton}\n      <Text\n        ref={setNodeRef}\n        listeners={listeners}\n        draggableAttrs={draggableAttrs}\n        onBlur={handleOk}\n        text={content}\n        fontSize={fontSize}\n        lineHeight= { lineHeight }\n        fontFamily={fontFamily}\n        editing={editing}\n        onChangeText={onChangeText}\n        style={textStyle}\n      />\n    </div>\n  )\n};\n","import React, { createRef, CSSProperties, forwardRef, MutableRefObject, RefObject, useEffect, useState } from 'react';\nimport { Rnd, RndDragCallback, RndResizeCallback } from 'react-rnd';\nimport { scaleTo } from '../utils/helpers';\nimport { DraggableSyntheticListeners, Translate } from '@dnd-kit/core';\n\ninterface Props {\n  img: HTMLImageElement;\n  width?: number;\n  height?: number;\n  style?: CSSProperties,\n  listeners?: DraggableSyntheticListeners;\n  draggableAttrs?: object;\n  desc?: string;\n}\n\nexport const Image = forwardRef<HTMLImageElement, Props>((\n  {\n    width,\n    height,\n    img,\n    style,\n    listeners,\n    draggableAttrs,\n    desc,\n  },\n  ref\n)=> {\n\n  return (\n    <img\n      style={{\n        width: width || \"100%\" ,\n        height: height || \"100%\" ,\n        cursor: 'move',\n        ...style,\n      }}\n      src={img.src}\n      ref={ref}\n      {...listeners}\n      {...draggableAttrs}\n      alt={desc}\n    />\n  );\n  }\n);\n\n","import React, { useState, useEffect, useRef, CSSProperties } from 'react';\nimport { Image as Component } from '../components/Image';\nimport { Position, ResizableDelta, Rnd } from 'react-rnd';\nimport { DraggableData, DraggableEvent } from 'react-draggable';\nimport { Direction } from 're-resizable/lib/resizer';\nimport { BsFillCircleFill, BsXCircleFill } from 'react-icons/all';\nimport { Stone } from '../components/Stone';\nimport { Translate, useDraggable } from '@dnd-kit/core';\nimport { Resizable, ResizeCallback } from 're-resizable';\n\ninterface Props {\n  pageWidth: number;\n  pageHeight: number;\n  removeImage?: () => void;\n  resizeImage?: (width: number, height: number) => void;\n  hidden?: boolean;\n  x:number;\n  y:number;\n}\n\nexport const DraggableImage = (\n  {\n  id,\n  img,\n  width,\n  height,\n  pageWidth,\n  removeImage,\n  pageHeight,\n    hidden=false,\n    x,\n    y,\n    resizeImage,\n}: ImageAttachment & Props) => {\n  const {attributes: draggableAttrs, isDragging, listeners, setNodeRef} = useDraggable({\n    id,\n  });\n\n  const onResizeStop : ResizeCallback = (e, direction, ref, d)=>{\n      function strToInt(strPx: string): number{\n        const strInt= strPx.replace('px','')\n        const int= parseInt(strInt)\n        if(int){\n          return int\n        }else{\n          throw new Error(strPx+ \" can't parse to int: \" + int + \"when parse \"+ strInt)\n        }\n      }\n\n      if(resizeImage)\n        resizeImage(strToInt(ref.style.width), strToInt(ref.style.height));\n  }\n\n  function handleRemove(e:React.MouseEvent){\n    if(removeImage){\n      e.stopPropagation()\n      removeImage();\n    }\n  }\n\n  function onClick(e: React.MouseEvent){\n    e.stopPropagation()\n  }\n\n  const deleteButton =\n    <Stone\n      position={{\n        left: 0,\n        top: 0,\n        right: 0,\n      }}\n      translateX={\"0\"}\n      translateY={\"-50%\"}\n      style={{\n        backgroundColor: 'white',\n      }}\n    >\n      <BsXCircleFill\n        onClick={handleRemove}\n        style={{\n          cursor: 'pointer',\n          color:'rgb(245, 101, 101)',\n          width: \"100%\",\n          height: \"100%\",\n        }}/>\n    </Stone>\n\n  let imageStyle: CSSProperties = {\n    border:'0.3px dashed gray',\n    cursor: 'move',\n  }\n\n  const hiddenStyle: CSSProperties = hidden\n    ? {visibility: 'hidden',}\n    : {}\n\n  return (\n    <div\n      id={id}\n      style={{\n        position: \"absolute\",\n        'left': `${x ?? 0}px`,\n        'top': `${y ?? 0}px`,\n        ...hiddenStyle,\n      }}\n      onClick={onClick}\n    >\n      <Resizable\n        size={{\n          width,\n          height,\n        }}\n        onResizeStop={onResizeStop}\n        enable={{\n          top: false,\n          right: false,\n          bottom: false,\n          left: false,\n          topRight: false,\n          bottomRight: false,\n          bottomLeft: false,\n          topLeft: false,\n        }}\n      >\n        <Component\n          ref={setNodeRef}\n          listeners={listeners}\n          draggableAttrs={draggableAttrs}\n          style={imageStyle}\n          img={img}/>\n      </Resizable>\n      {removeImage && deleteButton}\n    </div>\n\n  );\n};\n","import React, { RefObject } from 'react';\nimport { defaultCoordinates } from '@dnd-kit/core';\nimport { Coordinates } from '@dnd-kit/utilities/dist/coordinates/types';\n\nexport const ScrollContext = React.createContext<RefObject<HTMLDivElement> | null>(null);","import React, { CSSProperties } from 'react';\nimport {useDroppable, UniqueIdentifier} from '@dnd-kit/core';\n\nimport styles from './Droppable.module.css';\nimport classNames from 'classnames';\n\ninterface Props {\n  children: React.ReactNode | null;\n  id: UniqueIdentifier;\n  x: number;\n  y: number;\n  width: number,\n  height: number,\n}\n\nexport function Droppable(\n  {\n    children,\n    id,\n    x,\n    y,\n    width,\n    height,\n  }: Props) {\n  const {isOver, setNodeRef} = useDroppable({\n    id,\n  });\n\n  let border: CSSProperties ={\n    color: 'gray',\n    borderStyle: 'dashed',\n    borderWidth: '1px',\n  }\n  if(isOver){\n    border = {\n      boxShadow: \"inset #1eb99d 0 0 0 3px, rgba(201, 211, 219, 0.5) 20px 14px 24px\"\n    }\n  }\n\n  if(children){\n    border={\n      color:'rgb(245, 101, 101)',\n      borderStyle: 'solid',\n    }\n  }\n\n  return (\n    <div\n      ref={setNodeRef}\n      style={{\n        width,\n        height,\n        position: 'absolute',\n        left: `${x ?? 0}px`,\n        top: `${y ?? 0}px`,\n        // backgroundColor: \"#fff\",\n        ...border,\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\n","import React, { ReactNode, useEffect, useState } from 'react';\nimport { AttachmentTypes } from '../entities';\nimport { DraggableText } from '../containers/DraggableText';\nimport { DraggableImage } from '../containers/DraggableImage';\nimport {\n  defaultCoordinates,\n  DndContext, DragOverlay,\n  KeyboardSensor, Modifiers,\n  MouseSensor, PointerActivationConstraint,\n  TouchSensor,\n  Translate,\n  useSensor, useSensors,\n} from '@dnd-kit/core';\nimport { DragEndEvent } from '@dnd-kit/core/dist/types';\nimport { Droppable } from '../containers/Droppable';\nimport { Text } from './Text';\n\ninterface Props {\n  placements: Placement[];\n  attachments: Attachment[];\n}\n\nexport const Placements: React.FC<Props> = (\n  {\n    placements,\n    attachments,\n}) => {\n\n  function getHiddenPlaceholder(attachments: Attachment[]) {\n    const result = attachments.map(a => {\n      const key = a.id;\n      return (<div hidden key={key} />)\n    })\n\n    if(!result.length){\n      return null\n    }else{\n      return result\n    }\n  }\n\n  return (\n    <>\n      {placements.map(placement => {\n        const id = placement.id\n        return <Droppable\n          key={id}\n          {...placement}\n        >\n          {getHiddenPlaceholder(attachments?.filter(a => a.column_id === id))}\n        </Droppable>\n      })}\n    </>\n  )\n};\n","export const scaleTo = (\n  w: number,\n  h: number,\n  wMax: number,\n  hMax: number = wMax\n): {\n  width: number;\n  height: number;\n} => {\n  let scale = 1;\n  if (w > wMax) {\n    scale = wMax / w;\n  }\n\n  if (h > hMax) {\n    scale = Math.min(scale, hMax / h);\n  }\n\n  const width = w * scale;\n  const height = h * scale;\n  return {\n    width,\n    height,\n  };\n};\n\nexport function whichPlacement(\n  x: number,\n  y: number,\n  placements: Placement[]\n): Placement | null {\n  const lasted = placements[placements.length - 1];\n  const arr = placements\n    .filter(\n      (p) =>\n        p.x < x &&\n        x < lasted.x + lasted.width &&\n        p.y < y &&\n        y < lasted.y + lasted.height\n    )\n    .sort((p1) => p1.x - x + (p1.y - y));\n  if (arr && arr.length) return arr[0];\n  return null;\n}\n\nexport function getResizedAttachment(\n  attachment: Attachment,\n  placement: Placement\n): Attachment {\n  const { width, height } = scaleTo(\n    attachment.width,\n    attachment.height,\n    placement.width,\n    placement.height\n  );\n\n  let x = placement.x;\n  const y = placement.y;\n\n  // 置中\n  if (width < placement.width) {\n    const space = placement.width - width;\n    x = placement.x + space / 2;\n  }\n  return {\n    ...attachment,\n    x,\n    y,\n    column_id: placement.id,\n    width,\n    height,\n  } as Attachment;\n}\n","import React, { CSSProperties, ReactNode, useEffect, useState } from 'react';\nimport { AttachmentTypes } from '../entities';\nimport { DraggableText } from '../containers/DraggableText';\nimport { DraggableImage } from '../containers/DraggableImage';\nimport { ScrollContext } from '../contexts/ScrollContext';\nimport {\n  defaultCoordinates,\n  DndContext, DragOverlay,\n  KeyboardSensor, Modifiers,\n  MouseSensor, PointerActivationConstraint,\n  TouchSensor,\n  Translate,\n  useSensor, useSensors,\n} from '@dnd-kit/core';\nimport { DragEndEvent } from '@dnd-kit/core/dist/types';\nimport { Droppable } from '../containers/Droppable';\nimport { Text } from './Text';\nimport { Placements } from './Placements';\nimport { Image } from './Image';\nimport { getResizedAttachment, scaleTo, whichPlacement } from '../utils/helpers';\nimport { createPortal } from 'react-dom';\n\ninterface Props {\n  placements: Placement[];\n  attachments: Attachment[];\n  pageDimensions: Dimensions;\n  removeAttachment: (id: string) => void;\n  updateAttachment: (id: string, attachment: Partial<Attachment>) => void;\n  scale?:number;\n}\n\nconst IMAGE_WIDTH_MAX_SIZE = 90;\nconst IMAGE_HEIGHT_MAX_SIZE = 50;\nexport const Attachments: React.FC<Props> = (\n  {\n    placements,\n  attachments,\n  pageDimensions,\n    removeAttachment,\n  updateAttachment,\n    scale=1,\n}) => {\n  const [initialWindowScroll, setInitialWindowScroll] = useState(defaultCoordinates);\n  const [draggingId, setDraggingId] = useState<string | null>(null);\n  const scaledAttachments: Attachment[] = attachments.map(a=>getScaledAttachment(a))\n  const scaledPlacements: Placement[] = placements.map(p=>({\n    ...p,\n    width: p.width * scale,\n    height: p.height * scale,\n    x: p.x * scale,\n    y: p.y * scale,\n  }))\n\n  const mouseSensor = useSensor(MouseSensor, {\n    activationConstraint: {\n      distance: 1,\n    },\n  });\n\n  let snapshot: ReactNode = null\n  if(draggingId) {\n    const scaled = scaledAttachments.find(a => a.id === draggingId)!\n    if (scaled.type === AttachmentTypes.TEXT) {\n      snapshot = <Text {...scaled as TextAttachment} />\n    } else if (scaled.type === AttachmentTypes.IMAGE) {\n      snapshot = <Image {...scaled as ImageAttachment} />\n    }\n  }else{\n    snapshot = null\n  }\n\n  const handleAttachmentUpdate = (id: string) => (\n    attachment: Partial<Attachment>\n  ) => updateAttachment(id, attachment);\n\n  function resizeImage(newWidth: number, newHeight: number, attachmentId: string){\n    handleAttachmentUpdate(attachmentId)({\n      width: newWidth / scale,\n      height: newHeight / scale,\n    })\n  }\n\n  function getAttachmentJsx(attachment: Attachment, key?: string,){\n    if (attachment.type === AttachmentTypes.IMAGE) {\n      return (\n        <DraggableImage\n          key={key}\n          id={key}\n          hidden={draggingId === attachment.id}\n          pageWidth={pageDimensions.width}\n          pageHeight={pageDimensions.height}\n          removeImage={() => removeAttachment(attachment.id)}\n          // resizeImage={(w, h )=> resizeImage(w, h, attachment.id)}\n          {...(attachment as ImageAttachment)}\n        />\n      );\n    }else{\n      return (\n        <DraggableText\n          key={key}\n          id={key}\n          hidden={draggingId === attachment.id}\n          pageWidth={pageDimensions.width}\n          pageHeight={pageDimensions.height}\n          removeText={() => removeAttachment(attachment.id)}\n          updateTextAttachment={handleAttachmentUpdate(attachment.id)}\n          {...(attachment as TextAttachment)}\n        />\n      )\n    }\n  }\n\n  function getScaledAttachment(attachment: Attachment):Attachment{\n    if(attachment.type === AttachmentTypes.TEXT){\n      attachment= getScaledText(attachment as TextAttachment)\n    }else if(attachment.type === AttachmentTypes.IMAGE){\n      attachment= getScaledImage(attachment as ImageAttachment)\n    }\n    return attachment;\n  }\n\n  function getScaledText(attachment: TextAttachment): TextAttachment{\n    return {\n      ...attachment,\n      x: attachment.x * scale,\n      y: attachment.y * scale,\n      width: attachment.width * scale,\n      height: attachment.height * scale,\n      fontSize: attachment.fontSize? attachment.fontSize * scale : undefined,\n    }\n  }\n\n  function getScaledImage(attachment: ImageAttachment): ImageAttachment{\n    const { width, height } = scaleTo(\n      attachment.width,\n      attachment.height,\n      IMAGE_WIDTH_MAX_SIZE,\n      IMAGE_HEIGHT_MAX_SIZE\n    )\n    return {\n      ...attachment,\n      x: attachment.x * scale,\n      y: attachment.y * scale,\n      width: width * scale,\n      height: height * scale,\n    }\n  }\n\n  return (\n    <ScrollContext.Consumer>\n      {ref =>(\n        <DndContext\n          sensors={[mouseSensor]}\n          onDragStart={event => {\n            setDraggingId(event.active.id)\n            setInitialWindowScroll({\n              x: ref?.current?.scrollLeft || 0,\n              y: ref?.current?.scrollTop || 0,\n            });\n          }}\n          onDragEnd={event => {\n            const attachment = attachments.find(a=> a.id === draggingId)!\n            let updated : Partial<Attachment>\n            if(event.over){\n              const placement= placements.find(p=> p.id === event.over!.id)!\n              updated= getResizedAttachment(attachment, placement)\n            }else{\n              updated = {\n                x: (event.delta.x - initialWindowScroll.x) / scale + (attachment.x || 0),\n                y: (event.delta.y - initialWindowScroll.y) / scale + (attachment.y || 0),\n                column_id: undefined,\n              }\n            }\n            handleAttachmentUpdate(event.active.id)(updated)\n            setDraggingId(null)\n          }}\n          onDragCancel={() => setDraggingId(null)}\n        >\n          <Placements\n            placements={scaledPlacements}\n            attachments={attachments}\n          />\n\n          {scaledAttachments.map(a => {\n            const key = a.id;\n            return getAttachmentJsx(a, key)\n          })}\n\n          {createPortal(\n            <DragOverlay>\n              {snapshot}\n            </DragOverlay>,\n            document.body\n          )}\n        </DndContext>\n      )}\n    </ScrollContext.Consumer>\n  )\n};\n","import React, { createRef, useState } from 'react';\nimport { readAsDataURL, readAsImage, readAsPDF } from '../utils/asyncReader';\nimport { Pdf } from './usePdf';\nimport { AttachmentTypes } from '../entities';\nimport uuid from 'uuid';\n\nexport enum UploadTypes {\n  PDF = 'pdf',\n  IMAGE = 'image',\n}\n\nexport const useUploader = ({\n  afterUploadPdf,\n  afterUploadImage,\n  use,\n}: {\n  afterUploadPdf?: (upload: Pdf) => void;\n  afterUploadImage?: (upload: ImageAttachment) => void;\n  use: UploadTypes;\n}) => {\n  const [uploading, setUploading] = useState(false);\n  const inputRef = createRef<HTMLInputElement>();\n\n  return {\n    inputRef,\n    uploading,\n    handleUpload: () => {\n      const input = inputRef.current;\n      if (input) {\n        input.value = '';\n        setUploading(true);\n        input.click();\n      }\n    },\n    fileOnChange: async (\n      event: React.ChangeEvent<HTMLInputElement> & {\n        dataTransfer?: DataTransfer;\n      }\n    ) => {\n      if (!uploading) return;\n\n      const files: FileList | undefined =\n        event.currentTarget.files ||\n        (event.dataTransfer && event.dataTransfer.files);\n      if (!files) {\n        setUploading(false);\n        return;\n      }\n\n      const file = files[0];\n      if (use === UploadTypes.IMAGE) {\n        const result = await fileToImage(file);\n        if (afterUploadImage) afterUploadImage(result);\n      } else if (use === UploadTypes.PDF) {\n        const result = await fileToPdf(file);\n        if (afterUploadPdf) afterUploadPdf(result);\n      }\n\n      setUploading(false);\n    },\n  };\n};\n\nexport async function fileToImage(file: File, id: string = uuid.v4()): Promise<ImageAttachment> {\n  try {\n    const url = await readAsDataURL(file);\n    const img = await readAsImage(url as string);\n    const { width, height } = img;\n\n    return {\n      id,\n      type: AttachmentTypes.IMAGE,\n      width,\n      height,\n      x: 0,\n      y: 0,\n      img,\n      file,\n    } as ImageAttachment;\n  } catch (error) {\n    console.log('Failed to load image', error);\n    throw new Error('Failed to load image');\n  }\n}\n\nexport async function fileToPdf(file: File): Promise<Pdf> {\n  try {\n    const pdf = await readAsPDF(file);\n    return {\n      file,\n      name: file.name,\n      pages: Array(pdf.numPages)\n        .fill(0)\n        .map((_, index) => pdf.getPage(index + 1)),\n    } as Pdf;\n  } catch (error) {\n    console.log('Failed to load pdf', error);\n    throw new Error('Failed to load PDF');\n  }\n}\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  createRef,\n  useReducer,\n  ReactNode,\n  MouseEventHandler,\n  CSSProperties,\n} from 'react';\nimport { Image, Image as Component } from './Image';\nimport { Position, ResizableDelta, Rnd } from 'react-rnd';\nimport { DraggableData, DraggableEvent } from 'react-draggable';\nimport { Direction } from 're-resizable/lib/resizer';\nimport { DraggableImage } from '../containers/DraggableImage';\nimport { readAsDataURL, readAsImage } from '../utils/asyncReader';\nimport uuid from 'uuid';\nimport { AttachmentTypes } from '../entities';\nimport { scaleTo } from '../utils/helpers';\n\ninterface Props {\n  children?:ReactNode | null,\n  onClick?: MouseEventHandler;\n  style?: CSSProperties;\n}\n\nexport const Candidate = (\n  {\n    children,\n    onClick,\n    style,\n  }: Props) => {\n\n  return (\n    <div\n      onClick={onClick}\n      style={{\n        margin: '0.5rem',\n        float: 'left',\n        ...style,\n      }}\n    >\n      {children}\n  </div>\n  )\n};\n","import React, { useState, useEffect, useRef, createRef, useReducer, MouseEventHandler } from 'react';\nimport { Image, Image as Component } from './Image';\nimport { Position, ResizableDelta, Rnd } from 'react-rnd';\nimport { DraggableData, DraggableEvent } from 'react-draggable';\nimport { Direction } from 're-resizable/lib/resizer';\nimport { DraggableImage } from '../containers/DraggableImage';\nimport { readAsDataURL, readAsImage } from '../utils/asyncReader';\nimport uuid from 'uuid';\nimport { AttachmentTypes } from '../entities';\nimport { scaleTo } from '../utils/helpers';\nimport { Candidate } from './Candidate';\n\ninterface Props {\n  attachment: ImageAttachment\n  onClick?: MouseEventHandler;\n  scale?: number;\n  active?: boolean;\n}\n\nconst IMAGE_MAX_SIZE = 90;\nexport const CandidateImage = (\n  {\n    attachment,\n    onClick,\n    scale = 1,\n    active = false,\n}: Props) => {\n  function getScaledImage(attachment: ImageAttachment): ImageAttachment{\n    const { width, height } = scaleTo(\n      attachment.width,\n      attachment.height,\n      IMAGE_MAX_SIZE,\n    )\n    return {\n      ...attachment,\n      x: attachment.x * scale,\n      y: attachment.y * scale,\n      width: width * scale,\n      height: height * scale,\n    }\n  }\n\n  const style = active? {\n    borderColor: \"#1eb99d\",\n    borderStyle: 'solid',\n  } : {}\n\n  return (\n    <Candidate\n      onClick={onClick}\n      style={style}\n    >\n      <Image\n        {...getScaledImage(attachment)}\n        style={{\n          cursor: 'pointer'\n        }}\n      />\n    </Candidate>\n  )\n};\n","import { openDB, DBSchema } from 'idb';\nimport { fileToImage } from '../hooks/useUploader';\n\nconst IMAGES_TABLE_NAME = 'imageFiles';\nconst PDFS_TABLE_NAME = 'pdfs';\n\ninterface MyDB extends DBSchema {\n  [IMAGES_TABLE_NAME]: {\n    key: string;\n    value: File;\n  };\n  [PDFS_TABLE_NAME]: {\n    key: string;\n    value: File;\n  };\n}\n\nconst dbPromise = openDB<MyDB>('MY_DB', 10, {\n  upgrade(db, oldVersion, newVersion, transaction) {\n    db.createObjectStore(IMAGES_TABLE_NAME);\n    db.createObjectStore(PDFS_TABLE_NAME);\n  },\n  blocked() {\n    // …\n  },\n  blocking() {\n    // …\n  },\n  terminated() {\n    // …\n  },\n});\n\nexport async function saveImageFile(value: File, key: string) {\n  const db = await dbPromise;\n  return await db.put(IMAGES_TABLE_NAME, value, key);\n}\n\nexport async function getAllImages() {\n  const db = await dbPromise;\n  const keys = await db.getAllKeys(IMAGES_TABLE_NAME);\n  return await Promise.all(\n    keys.map(async key => {\n      const file = await db.get(IMAGES_TABLE_NAME, key)\n      return await fileToImage(file!, key);\n    })\n  );\n}\n\nexport async function removeAllImageFiles() {\n  const db = await dbPromise;\n  const transaction = db.transaction([IMAGES_TABLE_NAME], 'readwrite');\n  await transaction.objectStore(IMAGES_TABLE_NAME).clear();\n}\n\nexport async function savePdfFile(value: File, key: string) {\n  const db = await dbPromise;\n  return await db.put(PDFS_TABLE_NAME, value, key);\n}\n\nexport async function getAllPdfFiles() {\n  const db = await dbPromise;\n  return await db.getAll(PDFS_TABLE_NAME);\n}\n","import { useReducer, useCallback, useState, useEffect } from 'react';\nimport {\n  getAllImages,\n  removeAllImageFiles,\n  saveImageFile,\n} from '../utils/StorageService';\nimport { fileToImage } from './useUploader';\n\nexport const useDrawer = () => {\n  const [allCandidates, setAllCandidates] = useState<Attachment[]>([]);\n  const [flag, setFlag] = useState(false);\n\n  useEffect(() => {\n    async function func() {\n      const images = await getAllImages();\n      setAllCandidates(images);\n    }\n    func().then();\n  }, [flag]);\n\n  const refresh = () => setFlag(!flag);\n\n  return {\n    allCandidates: allCandidates,\n    refresh,\n    removeAllImages: async () => {\n      await removeAllImageFiles();\n      refresh();\n    },\n  };\n};\n","export const mockPlacements = (): Placement[] => {\n  const arr: Placement[] = [];\n\n  const width = 91;\n  const height = 50;\n  const offsetX = 103;\n  const offsetY = 470;\n\n  for (let x = 0; x < 5; x++) {\n    for (let y = 0; y < 4; y++) {\n      arr.push({\n        height,\n        width,\n        x: offsetX + width * x,\n        y: offsetY + height * y,\n        id: `${x}-${y}`,\n      });\n    }\n  }\n  return arr;\n};\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  createRef,\n  useReducer,\n  ReactNode,\n  MouseEventHandler,\n  CSSProperties,\n} from 'react';\nimport { Image, Image as Component } from './Image';\nimport { Position, ResizableDelta, Rnd } from 'react-rnd';\nimport { DraggableData, DraggableEvent } from 'react-draggable';\nimport { Direction } from 're-resizable/lib/resizer';\nimport { DraggableImage } from '../containers/DraggableImage';\nimport { readAsDataURL, readAsImage } from '../utils/asyncReader';\nimport uuid from 'uuid';\nimport { AttachmentTypes } from '../entities';\nimport { scaleTo } from '../utils/helpers';\nimport { Candidate } from './Candidate';\nimport { Button } from 'react-bootstrap';\n\ninterface Props {\n  children?:ReactNode | null,\n  onClick?: MouseEventHandler;\n  scale?: number;\n  active?: boolean;\n}\n\nexport const CandidateText = (\n  {\n    onClick,\n    children,\n    scale,\n    active\n  }: Props) => {\n\n  const style: CSSProperties = active? {\n    borderStyle: 'solid',\n    borderColor: \"#1eb99d\",\n  } : {}\n  return (\n    <Candidate>\n      <Button\n        style={{\n          width: '100%',\n          height: '5rem',\n          ...style,\n        }}\n        onClick={onClick}>\n        {children}\n      </Button>\n    </Candidate>\n  )\n};\n","import React from 'react';\n\nexport const MouseContext = React.createContext<MyMouseEvent>({\n  active: false,\n  activePosition: { x: 0, y: 0 },\n  elementDimensions: { height: 0, width: 0 },\n  elementOffset: { left: 0, top: 0 },\n  itemDimensions: { height: 0, width: 0 },\n  itemPosition: { x: 0, y: 0 },\n  itemRef: undefined,\n  onLoadRefresh() {\n  },\n  passivePosition: { x: 0, y: 0 },\n  prevActivePosition: { x: 0, y: 0 }\n});","import React, { MouseEventHandler, useEffect, useRef, useState } from 'react';\nimport { Page } from './Page';\nimport { Attachments } from './Attachments';\nimport { mockPlacements } from '../models/MockPlacements';\nimport { Card } from 'react-bootstrap';\nimport uuid from 'uuid';\nimport { getResizedAttachment, whichPlacement } from '../utils/helpers';\nimport { MouseContext } from '../contexts/MouseContext';\n\ninterface Props {\n  children?: React.ReactNode | null;\n  onClick?: (x: number, y: number) => void;\n  handleAttachment?: Attachment;\n  addAttachment?: (attachment: Attachment) => void;\n  scale?: number;\n}\nexport const Clickable = (\n  {\n    children,\n    onClick,\n    handleAttachment,\n    addAttachment,\n    scale =1,\n    ...event\n  }: Props & Partial<MyMouseEvent>) => {\n  const handleClick = ()=> {\n    if(!event.passivePosition) return\n    let { x, y } = event.passivePosition\n    if (handleAttachment && addAttachment) {\n      x = x/scale\n      y = y/scale\n      let placement= whichPlacement(x, y, mockPlacements())\n      if(placement){\n        const attachment = getResizedAttachment(handleAttachment, placement);\n        addAttachment({\n          ...attachment,\n          id: uuid.v4(),\n        })\n      }else{\n        addAttachment({\n          ...handleAttachment,\n          x,\n          y,\n          id: uuid.v4(),\n        })\n      }\n    }\n    if(onClick)\n      onClick(event.passivePosition.x, event.passivePosition.y)\n  }\n  return <div\n    onClick={handleClick}\n  >\n    <MouseContext.Provider value={event as MyMouseEvent}>\n      {children}\n    </MouseContext.Provider>\n  </div>\n};\n","import React, { useEffect, useRef, useState } from 'react';\n\ninterface Props {\n  page: any;\n  dimensions?: Dimensions;\n  setDimensions?: ({ width, height }: Dimensions) => void;\n  scale?:number;\n}\n\nexport const Page = ({ page, dimensions, setDimensions, scale=1 }: Props) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [width, setWidth] = useState(dimensions?.width || 0);\n  const [height, setHeight] = useState(dimensions?.height || 0);\n\n  useEffect(() => {\n    renderPage();\n    async function renderPage(){\n      const _page = await page;\n      const canvas = canvasRef.current\n      if (_page) {\n        const context = canvas?.getContext('2d');\n        const viewport = _page.getViewport({ scale });\n\n        setWidth(viewport.width);\n        setHeight(viewport.height);\n\n        if (context) {\n          await _page.render({\n            canvasContext: canvas?.getContext('2d'),\n            viewport,\n          }).promise;\n\n          const newDimensions = {\n            width: viewport.width,\n            height: viewport.height,\n          };\n\n          if(setDimensions) setDimensions(newDimensions as Dimensions);\n        }\n      }\n    }\n  }, [page, setDimensions]);\n\n  return (\n    <div>\n      <canvas ref={canvasRef} width={width} height={height} />\n    </div>\n  );\n};\n","import React, { createRef, CSSProperties, FocusEventHandler, forwardRef, ReactNode } from 'react';\nimport classNames from 'classnames';\nimport type {DraggableSyntheticListeners, Translate} from '@dnd-kit/core';\nimport { MouseContext } from '../contexts/MouseContext';\nimport { ScrollContext } from '../contexts/ScrollContext';\nimport { defaultCoordinates } from '@dnd-kit/core';\n\ninterface Props {\n  style?: CSSProperties;\n  children?:ReactNode | null,\n}\n\nexport const Scrollable = (\n  {\n    children,\n    style,\n  }: Props\n) =>{\n  const ref = createRef<HTMLDivElement>();\n\n  return <ScrollContext.Provider value={ref}>\n    <div\n      ref={ref}\n      className=\"row flex-nowrap\"\n      style={{\n        overflowX: 'scroll',\n        overflowY: 'scroll',\n        height: '93vh',\n        ...style\n      }}\n    >\n      {children}\n    </div>\n  </ScrollContext.Provider>\n\n}","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Pdf, usePdf } from './hooks/usePdf';\nimport { Button, Card, Col, Container, Nav, Row } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useAttachments } from './hooks/useAttachments';\nimport { AttachmentTypes } from './entities';\nimport { Attachments as PageAttachments } from './components/Attachments';\nimport { UploadTypes, useUploader } from './hooks/useUploader';\nimport uuid from 'uuid';\nimport { CandidateImage } from './components/CandidateImage';\nimport { useDrawer } from './hooks/useDrawer';\n\nimport { BsChevronLeft, BsChevronRight, BsFillCloudDownloadFill, BsFillCloudUploadFill } from 'react-icons/bs';\nimport { mockPlacements } from './models/MockPlacements';\nimport { getResizedAttachment, scaleTo, whichPlacement } from './utils/helpers';\nimport { CandidateText } from './components/CandidateText';\nimport { saveImageFile } from './utils/StorageService';\nimport ReactInputPosition from \"react-input-position\";\nimport { Clickable } from './components/Clickable';\nimport { Page } from './components/Page';\nimport { Scrollable } from './components/Scrollable';\n\nconst App: React.FC<{}> = () => {\n  const [ scale, setScale ] = useState(1.65);\n  const [ handleAttachment, setHandleAttachment ] = useState<Attachment | undefined>();\n  const { file, setPdf, pageIndex, isMultiPage, isFirstPage, isLastPage, currentPage, isSaving, savePdf, previousPage, nextPage, setDimensions, name, dimensions } = usePdf();\n  const { allCandidates, removeAllImages, refresh: refreshDrawer } = useDrawer();\n  const { addAttachment, allPageAttachments, pageAttachments, resetAttachments, updateAttachments, removeAttachments, setPageIndex } = useAttachments();\n  const isPdfLoaded = !!file\n\n  const { inputRef: pdfRef, handleUpload: handlePdfUpload, fileOnChange: pdfOnChange } = useUploader({\n    use: UploadTypes.PDF,\n    afterUploadPdf: (uploaded: Pdf)=>{\n      setPdf(uploaded);\n      const numberOfPages = uploaded.pages.length;\n      resetAttachments(numberOfPages)\n    }\n  });\n\n  const { inputRef: imgRef, handleUpload: handleImageUpload, fileOnChange: imgOnChange } = useUploader({\n    use: UploadTypes.IMAGE,\n    afterUploadImage: (attachment: ImageAttachment)=>{\n        saveImageFile(attachment.file, attachment.id).then(()=>refreshDrawer());\n        setHandleAttachment(attachment)\n      }\n  });\n\n  useEffect(() => setPageIndex(pageIndex), [pageIndex, setPageIndex]);\n\n  const handleText = () => {\n    const newTextAttachment: TextAttachment = {\n      id: uuid.v4(),\n      type: AttachmentTypes.TEXT,\n      x: 0,\n      y: 0,\n      width: 120,\n      height: 25,\n      fontSize: 16,\n      lineHeight: 1.4,\n      fontFamily: 'Times-Roman',\n      text: 'Enter Text Here',\n    };\n    setHandleAttachment(newTextAttachment)\n  };\n\n  const handleSave = () => savePdf(allPageAttachments)\n\n  const message =\n    handleAttachment? \"點擊 PDF 的某處來新增附件\": \"這些圖片被儲存在 local 的 IndexedDB。\"\n\n  const hiddenInputs = (\n    <>\n      <input\n        ref={pdfRef}\n        type=\"file\"\n        accept=\"application/pdf\"\n        onChange={pdfOnChange}\n        style={{ display: 'none' }}\n      />\n      <input\n        ref={imgRef}\n        type=\"file\"\n        accept=\"image/*\"\n        style={{ display: 'none' }}\n        onChange={imgOnChange}\n      />\n    </>\n  )\n\n  let previousButtonStyle= {}\n  if(!isMultiPage || isFirstPage){\n    previousButtonStyle={\n      visibility:'hidden'\n    }\n  }\n\n  let nextPageStyle= {}\n  if(!isMultiPage || isLastPage){\n    nextPageStyle={\n      visibility:'hidden'\n    }\n  }\n\n    return (\n    <div className=\"App\">\n      {hiddenInputs}\n\n      <Container fluid>\n        {!isPdfLoaded && (<>\n        <Row className='justify-content-center mt-lg-5'>\n          <div>\n            <h3>上傳一份 Pdf！</h3>\n            <Button onClick={handlePdfUpload}><BsFillCloudUploadFill /> Upload</Button>\n          </div>\n        </Row>\n        </>)}\n        <Row>\n          <Col sm={3}>\n            {isPdfLoaded && (\n              <div className=\"flex-nowrap\" style={{\n                overflowY: 'scroll',\n                height: '100vh',\n              }}>\n              <h3>加入附件</h3>\n              <p>\n                {message}\n                <Button variant=\"link\" onClick={removeAllImages}>清空圖片</Button>\n              </p>\n              <CandidateText\n                active={handleAttachment?.type === AttachmentTypes.TEXT}\n                scale={scale}\n                onClick={handleText}>\n                新增文字\n              </CandidateText>\n              {allCandidates\n                .filter(attachment=>attachment.type === AttachmentTypes.IMAGE)\n                .map(attachment=>{\n                  console.log(handleAttachment?.id)\n                  return <div id={attachment.id}><CandidateImage\n                    key={attachment.id}\n                    active={handleAttachment?.id === attachment.id}\n                    onClick={()=>{\n                      setHandleAttachment(attachment)\n                    }}\n                    attachment={attachment as ImageAttachment}\n                    scale={scale}\n                  /></div>\n                })\n              }\n              <CandidateText scale={scale} onClick={handleImageUpload}>\n                上傳圖片\n              </CandidateText>\n            </div>)}\n          </Col>\n          <Col sm={9} className='position-relative'>\n            <div className=\"d-flex justify-content-between align-items-center\" style={{\n              height: '7vh',\n              minHeight: \"40px\",\n            }}>\n              <div>\n                <Button style={previousButtonStyle} className='rounded-circle' variant=\"outline-dark\" onClick={previousPage}><BsChevronLeft /></Button>\n              </div>\n              <div>\n                {isPdfLoaded && (<Nav className=\"justify-content-center\">\n                  <Nav.Link onClick={handlePdfUpload}><BsFillCloudUploadFill /> Upload New</Nav.Link>\n                  <Nav.Link onClick={handleSave}><BsFillCloudDownloadFill /> Save </Nav.Link>\n                </Nav>)}\n              </div>\n\n              <div>\n                <Button style={nextPageStyle} className='rounded-circle' variant=\"outline-dark\" onClick={nextPage}><BsChevronRight /></Button>\n              </div>\n            </div>\n            <Scrollable>\n            { currentPage && (\n              <ReactInputPosition\n                trackPassivePosition={true}\n                cursorStyle={handleAttachment ? undefined : 'default'}\n              >\n                <Clickable\n                  handleAttachment={handleAttachment}\n                  addAttachment={addAttachment}\n                  scale={scale}\n                >\n                  <Card\n                    style={{\n                      display: 'table', // for look more compact\n                    }}\n                  >\n                    <Page\n                      dimensions={dimensions}\n                      setDimensions={setDimensions}\n                      page={currentPage}\n                      scale={scale}\n                    />\n                    { dimensions && (\n                      <PageAttachments\n                        removeAttachment={removeAttachments}\n                        updateAttachment={updateAttachments}\n                        pageDimensions={dimensions}\n                        attachments={pageAttachments}\n                        placements={mockPlacements()}\n                        scale={scale} />\n                    )}\n                  </Card>\n                </Clickable>\n              </ReactInputPosition>\n            )}\n            </Scrollable>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { prepareAssets } from './utils/prepareAssets';\n\nprepareAssets();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}